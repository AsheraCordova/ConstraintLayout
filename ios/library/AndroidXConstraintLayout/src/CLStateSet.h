//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\widget\CLStateSet.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CLStateSet")
#ifdef RESTRICT_CLStateSet
#define INCLUDE_ALL_CLStateSet 0
#else
#define INCLUDE_ALL_CLStateSet 1
#endif
#undef RESTRICT_CLStateSet

#if !defined (ADXCLStateSet_) && (INCLUDE_ALL_CLStateSet || defined(INCLUDE_ADXCLStateSet))
#define ADXCLStateSet_

@class ADXConstraintsChangedListener;
@class JavaLangBoolean;
@class JavaLangFloat;
@class JavaLangInteger;
@class NSString;

/*!
 */
@interface ADXCLStateSet : NSObject {
 @public
  int32_t mDefaultState_;
  int32_t mCurrentStateId_;
  int32_t mCurrentConstraintNumber_;
}

#pragma mark Public

- (instancetype)init;

/*!
 @brief converts a state to a constraintSet
 @param currentConstrainSettId
 @param stateId
 @param width
 @param height
 */
- (int32_t)convertToConstraintSetWithInt:(int32_t)currentConstrainSettId
                                 withInt:(int32_t)stateId
                               withFloat:(float)width
                               withFloat:(float)height;

/*!
 @brief Parse a CLStateSet
 @param context
 @param parser
 */
- (bool)needsToChangeWithInt:(int32_t)id_
                   withFloat:(float)width
                   withFloat:(float)height;

/*!
 @brief listen for changes in constraintSet
 @param constraintsChangedListener
 */
- (void)setOnConstraintsChangedWithADXConstraintsChangedListener:(ADXConstraintsChangedListener *)constraintsChangedListener;

/*!
 @brief Get the constraint id for a state
 @param id_
 @param width
 @param height
 */
- (int32_t)stateGetConstraintIDWithInt:(int32_t)id_
                               withInt:(int32_t)width
                               withInt:(int32_t)height;

/*!
 @brief Update the Constraints
 @param currentId
 @param id_
 @param width
 @param height
 */
- (int32_t)updateConstraintsWithInt:(int32_t)currentId
                            withInt:(int32_t)id_
                          withFloat:(float)width
                          withFloat:(float)height;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXCLStateSet)

inline NSString *ADXCLStateSet_get_TAG(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ADXCLStateSet_TAG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXCLStateSet, TAG, NSString *)

FOUNDATION_EXPORT void ADXCLStateSet_init(ADXCLStateSet *self);

FOUNDATION_EXPORT ADXCLStateSet *new_ADXCLStateSet_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXCLStateSet *create_ADXCLStateSet_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADXCLStateSet)

@compatibility_alias AndroidxConstraintlayoutWidgetCLStateSet ADXCLStateSet;


#endif

#if !defined (ADXCLStateSet_State_) && (INCLUDE_ALL_CLStateSet || defined(INCLUDE_ADXCLStateSet_State))
#define ADXCLStateSet_State_

@class ADXCLStateSet_Variant;
@class JavaLangBoolean;
@class JavaLangFloat;
@class JavaLangInteger;
@class JavaUtilArrayList;

@interface ADXCLStateSet_State : NSObject {
 @public
  int32_t mId_;
  JavaUtilArrayList *mVariants_;
  int32_t mConstraintID_;
  bool mIsLayout_;
}

#pragma mark Public

- (int32_t)findMatchWithFloat:(float)width
                    withFloat:(float)height;

#pragma mark Package-Private

- (instancetype)init;

- (void)addWithADXCLStateSet_Variant:(ADXCLStateSet_Variant *)size;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXCLStateSet_State)

J2OBJC_FIELD_SETTER(ADXCLStateSet_State, mVariants_, JavaUtilArrayList *)

FOUNDATION_EXPORT void ADXCLStateSet_State_init(ADXCLStateSet_State *self);

FOUNDATION_EXPORT ADXCLStateSet_State *new_ADXCLStateSet_State_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXCLStateSet_State *create_ADXCLStateSet_State_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADXCLStateSet_State)


#endif

#if !defined (ADXCLStateSet_Variant_) && (INCLUDE_ALL_CLStateSet || defined(INCLUDE_ADXCLStateSet_Variant))
#define ADXCLStateSet_Variant_

@class JavaLangBoolean;
@class JavaLangFloat;
@class JavaLangInteger;

@interface ADXCLStateSet_Variant : NSObject {
 @public
  int32_t mId_;
  float mMinWidth_;
  float mMinHeight_;
  float mMaxWidth_;
  float mMaxHeight_;
  int32_t mConstraintID_;
  bool mIsLayout_;
}

#pragma mark Package-Private

- (instancetype)init;

- (bool)matchWithFloat:(float)widthDp
             withFloat:(float)heightDp;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXCLStateSet_Variant)

FOUNDATION_EXPORT void ADXCLStateSet_Variant_init(ADXCLStateSet_Variant *self);

FOUNDATION_EXPORT ADXCLStateSet_Variant *new_ADXCLStateSet_Variant_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXCLStateSet_Variant *create_ADXCLStateSet_Variant_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADXCLStateSet_Variant)


#endif

#pragma pop_macro("INCLUDE_ALL_CLStateSet")
