//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\motion\utils\StopLogic.java
//

#include "J2ObjC_source.h"
#include "MotionInterpolator.h"
#include "SpringStopEngine.h"
#include "StopEngine.h"
#include "StopLogic.h"
#include "StopLogicEngine.h"


@interface ADXStopLogic () {
 @public
  ADXStopLogicEngine *mStopLogicEngine_;
  ADXSpringStopEngine *mSpringStopEngine_;
  id<ADXStopEngine> mEngine_;
}

@end

J2OBJC_FIELD_SETTER(ADXStopLogic, mStopLogicEngine_, ADXStopLogicEngine *)
J2OBJC_FIELD_SETTER(ADXStopLogic, mSpringStopEngine_, ADXSpringStopEngine *)
J2OBJC_FIELD_SETTER(ADXStopLogic, mEngine_, id<ADXStopEngine>)

@implementation ADXStopLogic

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXStopLogic_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)debugWithNSString:(NSString *)desc
                      withFloat:(jfloat)time {
  return [((id<ADXStopEngine>) nil_chk(mEngine_)) debugWithNSString:desc withFloat:time];
}

- (jfloat)getVelocityWithFloat:(jfloat)x {
  return [((id<ADXStopEngine>) nil_chk(mEngine_)) getVelocityWithFloat:x];
}

- (void)configWithFloat:(jfloat)currentPos
              withFloat:(jfloat)destination
              withFloat:(jfloat)currentVelocity
              withFloat:(jfloat)maxTime
              withFloat:(jfloat)maxAcceleration
              withFloat:(jfloat)maxVelocity {
  JreStrongAssign(&mEngine_, mStopLogicEngine_);
  [((ADXStopLogicEngine *) nil_chk(mStopLogicEngine_)) configWithFloat:currentPos withFloat:destination withFloat:currentVelocity withFloat:maxTime withFloat:maxAcceleration withFloat:maxVelocity];
}

- (void)springConfigWithFloat:(jfloat)currentPos
                    withFloat:(jfloat)destination
                    withFloat:(jfloat)currentVelocity
                    withFloat:(jfloat)mass
                    withFloat:(jfloat)stiffness
                    withFloat:(jfloat)damping
                    withFloat:(jfloat)stopThreshold
                      withInt:(jint)boundaryMode {
  if (mSpringStopEngine_ == nil) {
    JreStrongAssignAndConsume(&mSpringStopEngine_, new_ADXSpringStopEngine_init());
  }
  JreStrongAssign(&mEngine_, mSpringStopEngine_);
  [mSpringStopEngine_ springConfigWithFloat:currentPos withFloat:destination withFloat:currentVelocity withFloat:mass withFloat:stiffness withFloat:damping withFloat:stopThreshold withInt:boundaryMode];
}

- (jfloat)getInterpolationWithFloat:(jfloat)v {
  return [((id<ADXStopEngine>) nil_chk(mEngine_)) getInterpolationWithFloat:v];
}

- (jfloat)getVelocity {
  return [((id<ADXStopEngine>) nil_chk(mEngine_)) getVelocity];
}

- (jboolean)isStopped {
  return [((id<ADXStopEngine>) nil_chk(mEngine_)) isStopped];
}

- (void)dealloc {
  RELEASE_(mStopLogicEngine_);
  RELEASE_(mSpringStopEngine_);
  RELEASE_(mEngine_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "F", 0x1, 8, 3, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(debugWithNSString:withFloat:);
  methods[2].selector = @selector(getVelocityWithFloat:);
  methods[3].selector = @selector(configWithFloat:withFloat:withFloat:withFloat:withFloat:withFloat:);
  methods[4].selector = @selector(springConfigWithFloat:withFloat:withFloat:withFloat:withFloat:withFloat:withFloat:withInt:);
  methods[5].selector = @selector(getInterpolationWithFloat:);
  methods[6].selector = @selector(getVelocity);
  methods[7].selector = @selector(isStopped);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mStopLogicEngine_", "LADXStopLogicEngine;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mSpringStopEngine_", "LADXSpringStopEngine;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mEngine_", "LADXStopEngine;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "debug", "LNSString;F", "getVelocity", "F", "config", "FFFFFF", "springConfig", "FFFFFFFI", "getInterpolation" };
  static const J2ObjcClassInfo _ADXStopLogic = { "StopLogic", "androidx.constraintlayout.motion.utils", ptrTable, methods, fields, 7, 0x1, 8, 3, -1, -1, -1, -1, -1 };
  return &_ADXStopLogic;
}

@end

void ADXStopLogic_init(ADXStopLogic *self) {
  ADXMotionInterpolator_init(self);
  JreStrongAssignAndConsume(&self->mStopLogicEngine_, new_ADXStopLogicEngine_init());
  JreStrongAssign(&self->mEngine_, self->mStopLogicEngine_);
}

ADXStopLogic *new_ADXStopLogic_init() {
  J2OBJC_NEW_IMPL(ADXStopLogic, init)
}

ADXStopLogic *create_ADXStopLogic_init() {
  J2OBJC_CREATE_IMPL(ADXStopLogic, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXStopLogic)
