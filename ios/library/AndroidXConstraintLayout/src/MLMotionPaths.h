//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\motion\widget\MLMotionPaths.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_MLMotionPaths")
#ifdef RESTRICT_MLMotionPaths
#define INCLUDE_ALL_MLMotionPaths 0
#else
#define INCLUDE_ALL_MLMotionPaths 1
#endif
#undef RESTRICT_MLMotionPaths

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ADXMLMotionPaths_) && (INCLUDE_ALL_MLMotionPaths || defined(INCLUDE_ADXMLMotionPaths))
#define ADXMLMotionPaths_

#define RESTRICT_JavaLangComparable 1
#define INCLUDE_JavaLangComparable 1
#include "java/lang/Comparable.h"

@class ADView;
@class ADXConstraintSet_Constraint;
@class ADXEasing;
@class ADXKeyPosition;
@class ADXMotionController;
@class IOSBooleanArray;
@class IOSDoubleArray;
@class IOSFloatArray;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaLangBoolean;
@class JavaLangDouble;
@class JavaLangFloat;
@class JavaLangInteger;
@class JavaUtilLinkedHashMap;
@class NSString;

/*!
 @brief This is used to capture and play back path of the layout.
 It is used to set the bounds of the view (view.layout(l, t, r, b))
 */
@interface ADXMLMotionPaths : NSObject < JavaLangComparable > {
 @public
  ADXEasing *mKeyFrameEasing_;
  int32_t mDrawPath_;
  float time_;
  float position_;
  float x_;
  float y_;
  float width_;
  float height_;
  float mPathRotate_;
  float mProgress_;
  int32_t mPathMotionArc_;
  int32_t mAnimateRelativeTo_;
  float mRelativeAngle_;
  ADXMotionController *mRelativeToController_;
  JavaUtilLinkedHashMap *attributes_;
  int32_t mMode_;
  int32_t mAnimateCircleAngleTo_;
  IOSDoubleArray *mTempValue_;
  IOSDoubleArray *mTempDelta_;
}

#pragma mark Public

- (instancetype)initPackagePrivate;

/*!
 @brief takes the new keyPosition
 @param c
 @param startTimePoint
 @param endTimePoint
 */
- (instancetype)initPackagePrivateWithInt:(int32_t)parentWidth
                                  withInt:(int32_t)parentHeight
                       withADXKeyPosition:(ADXKeyPosition *)c
                     withADXMLMotionPaths:(ADXMLMotionPaths *)startTimePoint
                     withADXMLMotionPaths:(ADXMLMotionPaths *)endTimePoint;

- (void)applyParametersWithADXConstraintSet_Constraint:(ADXConstraintSet_Constraint *)c;

- (int32_t)compareToWithId:(ADXMLMotionPaths *)o;

- (void)configureRelativeToWithADXMotionController:(ADXMotionController *)toOrbit;

- (void)setupRelativeWithADXMotionController:(ADXMotionController *)mc
                        withADXMLMotionPaths:(ADXMLMotionPaths *)relative;

#pragma mark Package-Private

- (void)differentWithADXMLMotionPaths:(ADXMLMotionPaths *)points
                     withBooleanArray:(IOSBooleanArray *)mask
                    withNSStringArray:(IOSObjectArray *)custom
                          withBoolean:(bool)arcMode;

- (void)fillStandardWithDoubleArray:(IOSDoubleArray *)data
                       withIntArray:(IOSIntArray *)toUse;

- (void)getBoundsWithIntArray:(IOSIntArray *)toUse
              withDoubleArray:(IOSDoubleArray *)data
               withFloatArray:(IOSFloatArray *)point
                      withInt:(int32_t)offset;

- (void)getCenterWithDouble:(double)p
               withIntArray:(IOSIntArray *)toUse
            withDoubleArray:(IOSDoubleArray *)data
             withFloatArray:(IOSFloatArray *)point
            withDoubleArray:(IOSDoubleArray *)vdata
             withFloatArray:(IOSFloatArray *)velocity;

- (void)getCenterWithDouble:(double)p
               withIntArray:(IOSIntArray *)toUse
            withDoubleArray:(IOSDoubleArray *)data
             withFloatArray:(IOSFloatArray *)point
                    withInt:(int32_t)offset;

- (void)getCenterVelocityWithDouble:(double)p
                       withIntArray:(IOSIntArray *)toUse
                    withDoubleArray:(IOSDoubleArray *)data
                     withFloatArray:(IOSFloatArray *)point
                            withInt:(int32_t)offset;

- (int32_t)getCustomDataWithNSString:(NSString *)name
                     withDoubleArray:(IOSDoubleArray *)value
                             withInt:(int32_t)offset;

- (int32_t)getCustomDataCountWithNSString:(NSString *)name;

- (void)getRectWithIntArray:(IOSIntArray *)toUse
            withDoubleArray:(IOSDoubleArray *)data
             withFloatArray:(IOSFloatArray *)path
                    withInt:(int32_t)offset;

- (bool)hasCustomDataWithNSString:(NSString *)name;

/*!
 @brief set up with Cartesian
 @param c
 @param startTimePoint
 @param endTimePoint
 */
- (void)initCartesianWithADXKeyPosition:(ADXKeyPosition *)c
                   withADXMLMotionPaths:(ADXMLMotionPaths *)startTimePoint
                   withADXMLMotionPaths:(ADXMLMotionPaths *)endTimePoint OBJC_METHOD_FAMILY_NONE;

- (void)initPathWithADXKeyPosition:(ADXKeyPosition *)c
              withADXMLMotionPaths:(ADXMLMotionPaths *)startTimePoint
              withADXMLMotionPaths:(ADXMLMotionPaths *)endTimePoint OBJC_METHOD_FAMILY_NONE;

- (void)initPolarWithInt:(int32_t)parentWidth
                 withInt:(int32_t)parentHeight
      withADXKeyPosition:(ADXKeyPosition *)c
    withADXMLMotionPaths:(ADXMLMotionPaths *)s
    withADXMLMotionPaths:(ADXMLMotionPaths *)e OBJC_METHOD_FAMILY_NONE;

- (void)initScreenWithInt:(int32_t)parentWidth
                  withInt:(int32_t)parentHeight
       withADXKeyPosition:(ADXKeyPosition *)c
     withADXMLMotionPaths:(ADXMLMotionPaths *)startTimePoint
     withADXMLMotionPaths:(ADXMLMotionPaths *)endTimePoint OBJC_METHOD_FAMILY_NONE;

- (void)setBoundsWithFloat:(float)x
                 withFloat:(float)y
                 withFloat:(float)w
                 withFloat:(float)h;

/*!
 @brief mAnchorDpDt
 @param locationX
 @param locationY
 @param mAnchorDpDt
 @param toUse
 @param deltaData
 @param data
 */
- (void)setDpDtWithFloat:(float)locationX
               withFloat:(float)locationY
          withFloatArray:(IOSFloatArray *)mAnchorDpDt
            withIntArray:(IOSIntArray *)toUse
         withDoubleArray:(IOSDoubleArray *)deltaData
         withDoubleArray:(IOSDoubleArray *)data;

- (void)setViewWithFloat:(float)position
              withADView:(ADView *)view
            withIntArray:(IOSIntArray *)toUse
         withDoubleArray:(IOSDoubleArray *)data
         withDoubleArray:(IOSDoubleArray *)slope
         withDoubleArray:(IOSDoubleArray *)cycle;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ADXMLMotionPaths)

J2OBJC_FIELD_SETTER(ADXMLMotionPaths, mKeyFrameEasing_, ADXEasing *)
J2OBJC_FIELD_SETTER(ADXMLMotionPaths, mRelativeToController_, ADXMotionController *)
J2OBJC_FIELD_SETTER(ADXMLMotionPaths, attributes_, JavaUtilLinkedHashMap *)
J2OBJC_FIELD_SETTER(ADXMLMotionPaths, mTempValue_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(ADXMLMotionPaths, mTempDelta_, IOSDoubleArray *)

inline NSString *ADXMLMotionPaths_get_TAG(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ADXMLMotionPaths_TAG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXMLMotionPaths, TAG, NSString *)

inline bool ADXMLMotionPaths_get_DEBUG(void);
#define ADXMLMotionPaths_DEBUG false
J2OBJC_STATIC_FIELD_CONSTANT(ADXMLMotionPaths, DEBUG, bool)

inline bool ADXMLMotionPaths_get_OLD_WAY(void);
#define ADXMLMotionPaths_OLD_WAY false
J2OBJC_STATIC_FIELD_CONSTANT(ADXMLMotionPaths, OLD_WAY, bool)

inline int32_t ADXMLMotionPaths_get_OFF_POSITION(void);
#define ADXMLMotionPaths_OFF_POSITION 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXMLMotionPaths, OFF_POSITION, int32_t)

inline int32_t ADXMLMotionPaths_get_OFF_X(void);
#define ADXMLMotionPaths_OFF_X 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXMLMotionPaths, OFF_X, int32_t)

inline int32_t ADXMLMotionPaths_get_OFF_Y(void);
#define ADXMLMotionPaths_OFF_Y 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXMLMotionPaths, OFF_Y, int32_t)

inline int32_t ADXMLMotionPaths_get_OFF_WIDTH(void);
#define ADXMLMotionPaths_OFF_WIDTH 3
J2OBJC_STATIC_FIELD_CONSTANT(ADXMLMotionPaths, OFF_WIDTH, int32_t)

inline int32_t ADXMLMotionPaths_get_OFF_HEIGHT(void);
#define ADXMLMotionPaths_OFF_HEIGHT 4
J2OBJC_STATIC_FIELD_CONSTANT(ADXMLMotionPaths, OFF_HEIGHT, int32_t)

inline int32_t ADXMLMotionPaths_get_OFF_PATH_ROTATE(void);
#define ADXMLMotionPaths_OFF_PATH_ROTATE 5
J2OBJC_STATIC_FIELD_CONSTANT(ADXMLMotionPaths, OFF_PATH_ROTATE, int32_t)

inline int32_t ADXMLMotionPaths_get_PERPENDICULAR(void);
#define ADXMLMotionPaths_PERPENDICULAR 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXMLMotionPaths, PERPENDICULAR, int32_t)

inline int32_t ADXMLMotionPaths_get_CARTESIAN(void);
#define ADXMLMotionPaths_CARTESIAN 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXMLMotionPaths, CARTESIAN, int32_t)

inline int32_t ADXMLMotionPaths_get_SCREEN(void);
#define ADXMLMotionPaths_SCREEN 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXMLMotionPaths, SCREEN, int32_t)

inline IOSObjectArray *ADXMLMotionPaths_get_names(void);
inline IOSObjectArray *ADXMLMotionPaths_set_names(IOSObjectArray *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *ADXMLMotionPaths_names;
J2OBJC_STATIC_FIELD_OBJ(ADXMLMotionPaths, names, IOSObjectArray *)

FOUNDATION_EXPORT void ADXMLMotionPaths_initPackagePrivate(ADXMLMotionPaths *self);

FOUNDATION_EXPORT ADXMLMotionPaths *new_ADXMLMotionPaths_initPackagePrivate(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXMLMotionPaths *create_ADXMLMotionPaths_initPackagePrivate(void);

FOUNDATION_EXPORT void ADXMLMotionPaths_initPackagePrivateWithInt_withInt_withADXKeyPosition_withADXMLMotionPaths_withADXMLMotionPaths_(ADXMLMotionPaths *self, int32_t parentWidth, int32_t parentHeight, ADXKeyPosition *c, ADXMLMotionPaths *startTimePoint, ADXMLMotionPaths *endTimePoint);

FOUNDATION_EXPORT ADXMLMotionPaths *new_ADXMLMotionPaths_initPackagePrivateWithInt_withInt_withADXKeyPosition_withADXMLMotionPaths_withADXMLMotionPaths_(int32_t parentWidth, int32_t parentHeight, ADXKeyPosition *c, ADXMLMotionPaths *startTimePoint, ADXMLMotionPaths *endTimePoint) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXMLMotionPaths *create_ADXMLMotionPaths_initPackagePrivateWithInt_withInt_withADXKeyPosition_withADXMLMotionPaths_withADXMLMotionPaths_(int32_t parentWidth, int32_t parentHeight, ADXKeyPosition *c, ADXMLMotionPaths *startTimePoint, ADXMLMotionPaths *endTimePoint);

J2OBJC_TYPE_LITERAL_HEADER(ADXMLMotionPaths)

@compatibility_alias AndroidxConstraintlayoutMotionWidgetMLMotionPaths ADXMLMotionPaths;


#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_MLMotionPaths")
