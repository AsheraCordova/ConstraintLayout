//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\helper\widget\Flow.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Flow")
#ifdef RESTRICT_Flow
#define INCLUDE_ALL_Flow 0
#else
#define INCLUDE_ALL_Flow 1
#endif
#undef RESTRICT_Flow

#if !defined (ADXFlow_) && (INCLUDE_ALL_Flow || defined(INCLUDE_ADXFlow))
#define ADXFlow_

#define RESTRICT_VirtualLayout 1
#define INCLUDE_ADXVirtualLayout 1
#include "VirtualLayout.h"

@class ADSparseArray;
@class ADXConstraintLayout_LayoutParams;
@class ADXConstraintSet_Constraint;
@class ADXConstraintWidget;
@class ADXCoreVirtualLayout;
@class ADXHelperWidget;
@class JavaLangBoolean;
@class JavaLangFloat;
@class JavaLangInteger;

@interface ADXFlow : ADXVirtualLayout

#pragma mark Public

- (instancetype)init;

- (void)loadParametersWithADXConstraintSet_Constraint:(ADXConstraintSet_Constraint *)constraint
                                  withADXHelperWidget:(ADXHelperWidget *)child
                 withADXConstraintLayout_LayoutParams:(ADXConstraintLayout_LayoutParams *)layoutParams
                                    withADSparseArray:(ADSparseArray *)mapIdToWidget;

- (void)onMeasureWithADXCoreVirtualLayout:(ADXCoreVirtualLayout *)layout
                                  withInt:(int32_t)widthMeasureSpec
                                  withInt:(int32_t)heightMeasureSpec;

- (void)resolveRtlWithADXConstraintWidget:(ADXConstraintWidget *)widget
                              withBoolean:(bool)isRtl;

- (void)setFirstHorizontalBiasWithFloat:(float)bias;

- (void)setFirstHorizontalStyleWithInt:(int32_t)style;

- (void)setFirstVerticalBiasWithFloat:(float)bias;

- (void)setFirstVerticalStyleWithInt:(int32_t)style;

- (void)setHorizontalAlignWithInt:(int32_t)align;

- (void)setHorizontalBiasWithFloat:(float)bias;

- (void)setHorizontalGapWithInt:(int32_t)gap;

- (void)setHorizontalStyleWithInt:(int32_t)style;

- (void)setMaxElementsWrapWithInt:(int32_t)max;

- (void)setOrientationWithInt:(int32_t)orientation;

- (void)setPaddingWithInt:(int32_t)padding;

- (void)setPaddingBottomWithInt:(int32_t)paddingBottom;

- (void)setPaddingLeftWithInt:(int32_t)paddingLeft;

- (void)setPaddingRightWithInt:(int32_t)paddingRight;

- (void)setPaddingTopWithInt:(int32_t)paddingTop;

- (void)setVerticalAlignWithInt:(int32_t)align;

- (void)setVerticalBiasWithFloat:(float)bias;

- (void)setVerticalGapWithInt:(int32_t)gap;

- (void)setVerticalStyleWithInt:(int32_t)style;

- (void)setWrapModeWithInt:(int32_t)mode;

#pragma mark Protected

- (void)onMeasureWithInt:(int32_t)widthMeasureSpec
                 withInt:(int32_t)heightMeasureSpec;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXFlow)

inline int32_t ADXFlow_get_HORIZONTAL(void);
#define ADXFlow_HORIZONTAL 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXFlow, HORIZONTAL, int32_t)

inline int32_t ADXFlow_get_VERTICAL(void);
#define ADXFlow_VERTICAL 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXFlow, VERTICAL, int32_t)

inline int32_t ADXFlow_get_WRAP_NONE(void);
#define ADXFlow_WRAP_NONE 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXFlow, WRAP_NONE, int32_t)

inline int32_t ADXFlow_get_WRAP_CHAIN(void);
#define ADXFlow_WRAP_CHAIN 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXFlow, WRAP_CHAIN, int32_t)

inline int32_t ADXFlow_get_WRAP_ALIGNED(void);
#define ADXFlow_WRAP_ALIGNED 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXFlow, WRAP_ALIGNED, int32_t)

inline int32_t ADXFlow_get_CHAIN_SPREAD(void);
#define ADXFlow_CHAIN_SPREAD 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXFlow, CHAIN_SPREAD, int32_t)

inline int32_t ADXFlow_get_CHAIN_SPREAD_INSIDE(void);
#define ADXFlow_CHAIN_SPREAD_INSIDE 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXFlow, CHAIN_SPREAD_INSIDE, int32_t)

inline int32_t ADXFlow_get_CHAIN_PACKED(void);
#define ADXFlow_CHAIN_PACKED 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXFlow, CHAIN_PACKED, int32_t)

inline int32_t ADXFlow_get_HORIZONTAL_ALIGN_START(void);
#define ADXFlow_HORIZONTAL_ALIGN_START 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXFlow, HORIZONTAL_ALIGN_START, int32_t)

inline int32_t ADXFlow_get_HORIZONTAL_ALIGN_END(void);
#define ADXFlow_HORIZONTAL_ALIGN_END 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXFlow, HORIZONTAL_ALIGN_END, int32_t)

inline int32_t ADXFlow_get_HORIZONTAL_ALIGN_CENTER(void);
#define ADXFlow_HORIZONTAL_ALIGN_CENTER 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXFlow, HORIZONTAL_ALIGN_CENTER, int32_t)

inline int32_t ADXFlow_get_VERTICAL_ALIGN_TOP(void);
#define ADXFlow_VERTICAL_ALIGN_TOP 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXFlow, VERTICAL_ALIGN_TOP, int32_t)

inline int32_t ADXFlow_get_VERTICAL_ALIGN_BOTTOM(void);
#define ADXFlow_VERTICAL_ALIGN_BOTTOM 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXFlow, VERTICAL_ALIGN_BOTTOM, int32_t)

inline int32_t ADXFlow_get_VERTICAL_ALIGN_CENTER(void);
#define ADXFlow_VERTICAL_ALIGN_CENTER 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXFlow, VERTICAL_ALIGN_CENTER, int32_t)

inline int32_t ADXFlow_get_VERTICAL_ALIGN_BASELINE(void);
#define ADXFlow_VERTICAL_ALIGN_BASELINE 3
J2OBJC_STATIC_FIELD_CONSTANT(ADXFlow, VERTICAL_ALIGN_BASELINE, int32_t)

FOUNDATION_EXPORT void ADXFlow_init(ADXFlow *self);

FOUNDATION_EXPORT ADXFlow *new_ADXFlow_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXFlow *create_ADXFlow_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADXFlow)

@compatibility_alias AndroidxConstraintlayoutHelperWidgetFlow ADXFlow;


#endif

#pragma pop_macro("INCLUDE_ALL_Flow")
