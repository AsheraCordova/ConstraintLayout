//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\widget\SharedValues.java
//

#define J2OBJC_IMPORTED_BY_JAVA_IMPLEMENTATION 1




#include "J2ObjC_source.h"
#include "SharedValues.h"
#include "SparseIntArray.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "java/lang/ref/WeakReference.h"
#include "java/util/ArrayList.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"
#include "java/util/Set.h"




#pragma clang diagnostic error "-Wreturn-type"
#pragma clang diagnostic ignored "-Wswitch"


@interface ADXSharedValues () {
 @public
  ADSparseIntArray *mValues_;
  JavaUtilHashMap *mValuesListeners_;
}

@end

J2OBJC_FIELD_SETTER(ADXSharedValues, mValues_, ADSparseIntArray *)
J2OBJC_FIELD_SETTER(ADXSharedValues, mValuesListeners_, JavaUtilHashMap *)

@interface ADXSharedValues_SharedValuesListener : NSObject

@end

@implementation ADXSharedValues

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXSharedValues_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)addListenerWithInt:(int32_t)key
withADXSharedValues_SharedValuesListener:(id<ADXSharedValues_SharedValuesListener>)listener {
  JavaUtilHashSet *listeners = JreRetainedLocalValue([((JavaUtilHashMap *) nil_chk(mValuesListeners_)) getWithId:JavaLangInteger_valueOfWithInt_(key)]);
  if (listeners == nil) {
    listeners = create_JavaUtilHashSet_init();
    [((JavaUtilHashMap *) nil_chk(mValuesListeners_)) putWithId:JavaLangInteger_valueOfWithInt_(key) withId:listeners];
  }
  [listeners addWithId:create_JavaLangRefWeakReference_initWithId_(listener)];
}

- (void)removeListenerWithInt:(int32_t)key
withADXSharedValues_SharedValuesListener:(id<ADXSharedValues_SharedValuesListener>)listener {
  JavaUtilHashSet *listeners = JreRetainedLocalValue([((JavaUtilHashMap *) nil_chk(mValuesListeners_)) getWithId:JavaLangInteger_valueOfWithInt_(key)]);
  if (listeners == nil) {
    return;
  }
  id<JavaUtilList> toRemove = create_JavaUtilArrayList_init();
  for (JavaLangRefWeakReference * __strong listenerWeakReference in listeners) {
    id<ADXSharedValues_SharedValuesListener> l = JreRetainedLocalValue([((JavaLangRefWeakReference *) nil_chk(listenerWeakReference)) get]);
    if (l == nil || JreObjectEqualsEquals(l, listener)) {
      [toRemove addWithId:listenerWeakReference];
    }
  }
  [listeners removeAllWithJavaUtilCollection:toRemove];
}

- (void)removeListenerWithADXSharedValues_SharedValuesListener:(id<ADXSharedValues_SharedValuesListener>)listener {
  for (JavaLangInteger * __strong key in nil_chk([((JavaUtilHashMap *) nil_chk(mValuesListeners_)) keySet])) {
    [self removeListenerWithInt:[((JavaLangInteger *) nil_chk(key)) intValue] withADXSharedValues_SharedValuesListener:listener];
  }
}

- (void)clearListeners {
  [((JavaUtilHashMap *) nil_chk(mValuesListeners_)) clear];
}

- (int32_t)getValueWithInt:(int32_t)key {
  return [((ADSparseIntArray *) nil_chk(mValues_)) getWithInt:key withInt:ADXSharedValues_UNSET];
}

- (void)fireNewValueWithInt:(int32_t)key
                    withInt:(int32_t)value {
  bool needsCleanup = false;
  int32_t previousValue = [((ADSparseIntArray *) nil_chk(mValues_)) getWithInt:key withInt:ADXSharedValues_UNSET];
  if (previousValue == value) {
    return;
  }
  [((ADSparseIntArray *) nil_chk(mValues_)) putWithInt:key withInt:value];
  JavaUtilHashSet *listeners = JreRetainedLocalValue([((JavaUtilHashMap *) nil_chk(mValuesListeners_)) getWithId:JavaLangInteger_valueOfWithInt_(key)]);
  if (listeners == nil) {
    return;
  }
  for (JavaLangRefWeakReference * __strong listenerWeakReference in listeners) {
    id<ADXSharedValues_SharedValuesListener> l = JreRetainedLocalValue([((JavaLangRefWeakReference *) nil_chk(listenerWeakReference)) get]);
    if (l != nil) {
      [l onNewValueWithInt:key withInt:value withInt:previousValue];
    }
    else {
      needsCleanup = true;
    }
  }
  if (needsCleanup) {
    id<JavaUtilList> toRemove = create_JavaUtilArrayList_init();
    for (JavaLangRefWeakReference * __strong listenerWeakReference in listeners) {
      id<ADXSharedValues_SharedValuesListener> listener = JreRetainedLocalValue([((JavaLangRefWeakReference *) nil_chk(listenerWeakReference)) get]);
      if (listener == nil) {
        [toRemove addWithId:listenerWeakReference];
      }
    }
    [listeners removeAllWithJavaUtilCollection:toRemove];
  }
}

- (void)dealloc {
  RELEASE_(mValues_);
  RELEASE_(mValuesListeners_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(addListenerWithInt:withADXSharedValues_SharedValuesListener:);
  methods[2].selector = @selector(removeListenerWithInt:withADXSharedValues_SharedValuesListener:);
  methods[3].selector = @selector(removeListenerWithADXSharedValues_SharedValuesListener:);
  methods[4].selector = @selector(clearListeners);
  methods[5].selector = @selector(getValueWithInt:);
  methods[6].selector = @selector(fireNewValueWithInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "UNSET", "I", .constantValue.asInt = ADXSharedValues_UNSET, 0x19, -1, -1, -1, -1 },
    { "mValues_", "LADSparseIntArray;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mValuesListeners_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x2, -1, -1, 8, -1 },
  };
  static const void *ptrTable[] = { "addListener", "ILADXSharedValues_SharedValuesListener;", "removeListener", "LADXSharedValues_SharedValuesListener;", "getValue", "I", "fireNewValue", "II", "Ljava/util/HashMap<Ljava/lang/Integer;Ljava/util/HashSet<Ljava/lang/ref/WeakReference<Landroidx/constraintlayout/widget/SharedValues$SharedValuesListener;>;>;>;" };
  static const J2ObjcClassInfo _ADXSharedValues = { "SharedValues", "androidx.constraintlayout.widget", ptrTable, methods, fields, 7, 0x1, 7, 3, -1, 3, -1, -1, -1 };
  return &_ADXSharedValues;
}

@end

void ADXSharedValues_init(ADXSharedValues *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->mValues_, new_ADSparseIntArray_init());
  JreStrongAssignAndConsume(&self->mValuesListeners_, new_JavaUtilHashMap_init());
}

ADXSharedValues *new_ADXSharedValues_init() {
  J2OBJC_NEW_IMPL(ADXSharedValues, init)
}

ADXSharedValues *create_ADXSharedValues_init() {
  J2OBJC_CREATE_IMPL(ADXSharedValues, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXSharedValues)

J2OBJC_NAME_MAPPING(ADXSharedValues, "androidx.constraintlayout.widget", "ADX")

@implementation ADXSharedValues_SharedValuesListener

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(onNewValueWithInt:withInt:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onNewValue", "III", "LADXSharedValues;" };
  static const J2ObjcClassInfo _ADXSharedValues_SharedValuesListener = { "SharedValuesListener", "androidx.constraintlayout.widget", ptrTable, methods, NULL, 7, 0x609, 1, 0, 2, -1, -1, -1, -1 };
  return &_ADXSharedValues_SharedValuesListener;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ADXSharedValues_SharedValuesListener)
