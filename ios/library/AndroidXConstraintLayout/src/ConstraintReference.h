//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\core\state\ConstraintReference.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ConstraintReference")
#ifdef RESTRICT_ConstraintReference
#define INCLUDE_ALL_ConstraintReference 0
#else
#define INCLUDE_ALL_ConstraintReference 1
#endif
#undef RESTRICT_ConstraintReference

#if !defined (ADXConstraintReference_) && (INCLUDE_ALL_ConstraintReference || defined(INCLUDE_ADXConstraintReference))
#define ADXConstraintReference_

#define RESTRICT_Reference 1
#define INCLUDE_ADXReference 1
#include "Reference.h"

@class ADXConstraintWidget;
@class ADXDimension;
@class ADXState;
@class ADXState_Constraint;
@class JavaLangFloat;
@class JavaLangInteger;
@class NSString;
@protocol ADXFacade;

@interface ADXConstraintReference : NSObject < ADXReference > {
 @public
  ADXState *mState_;
  NSString *mTag_;
  id<ADXFacade> mFacade_;
  int32_t mHorizontalChainStyle_;
  int32_t mVerticalChainStyle_;
  float mHorizontalBias_;
  float mVerticalBias_;
  int32_t mMarginLeft_;
  int32_t mMarginRight_;
  int32_t mMarginStart_;
  int32_t mMarginEnd_;
  int32_t mMarginTop_;
  int32_t mMarginBottom_;
  int32_t mMarginLeftGone_;
  int32_t mMarginRightGone_;
  int32_t mMarginStartGone_;
  int32_t mMarginEndGone_;
  int32_t mMarginTopGone_;
  int32_t mMarginBottomGone_;
  float mPivotX_;
  float mPivotY_;
  float mRotationX_;
  float mRotationY_;
  float mRotationZ_;
  float mTranslationX_;
  float mTranslationY_;
  float mTranslationZ_;
  float mAlpha_;
  float mScaleX_;
  float mScaleY_;
  int32_t mVisibility_;
  id mLeftToLeft_;
  id mLeftToRight_;
  id mRightToLeft_;
  id mRightToRight_;
  id mStartToStart_;
  id mStartToEnd_;
  id mEndToStart_;
  id mEndToEnd_;
  id mTopToTop_;
  id mTopToBottom_;
  id mBottomToTop_;
  id mBottomToBottom_;
  id mBaselineToBaseline_;
  id mCircularConstraint_;
  ADXState_Constraint *mLast_;
  ADXDimension *mHorizontalDimension_;
  ADXDimension *mVerticalDimension_;
}

#pragma mark Public

- (instancetype)initWithADXState:(ADXState *)state;

- (void)addCustomColorWithNSString:(NSString *)name
                           withInt:(int32_t)color;

- (void)addCustomFloatWithNSString:(NSString *)name
                         withFloat:(float)value;

- (ADXConstraintReference *)alphaWithFloat:(float)alpha;

- (void)apply;

- (ADXConstraintReference *)baseline;

- (ADXConstraintReference *)baselineToBaselineWithId:(id)reference;

- (ADXConstraintReference *)biasWithFloat:(float)value;

- (ADXConstraintReference *)bottom;

- (ADXConstraintReference *)bottomToBottomWithId:(id)reference;

- (ADXConstraintReference *)bottomToTopWithId:(id)reference;

- (ADXConstraintReference *)centerHorizontallyWithId:(id)reference;

- (ADXConstraintReference *)centerVerticallyWithId:(id)reference;

- (ADXConstraintReference *)circularConstraintWithId:(id)reference
                                           withFloat:(float)angle
                                           withFloat:(float)distance;

- (ADXConstraintReference *)clear;

- (ADXConstraintReference *)clearHorizontal;

- (ADXConstraintReference *)clearVertical;

- (ADXConstraintWidget *)createConstraintWidget;

- (ADXConstraintReference *)end;

- (ADXConstraintReference *)endToEndWithId:(id)reference;

- (ADXConstraintReference *)endToStartWithId:(id)reference;

- (float)getAlpha;

- (ADXConstraintWidget *)getConstraintWidget;

- (id<ADXFacade>)getFacade;

- (ADXDimension *)getHeight;

- (int32_t)getHorizontalChainStyle;

- (id)getKey;

- (float)getPivotX;

- (float)getPivotY;

- (float)getRotationX;

- (float)getRotationY;

- (float)getRotationZ;

- (float)getScaleX;

- (float)getScaleY;

- (NSString *)getTag;

- (float)getTranslationX;

- (float)getTranslationY;

- (float)getTranslationZ;

- (int32_t)getVerticalChainStyleWithInt:(int32_t)chainStyle;

- (id)getView;

- (ADXDimension *)getWidth;

- (ADXConstraintReference *)heightWithADXDimension:(ADXDimension *)dimension;

- (ADXConstraintReference *)horizontalBiasWithFloat:(float)value;

- (ADXConstraintReference *)left;

- (ADXConstraintReference *)leftToLeftWithId:(id)reference;

- (ADXConstraintReference *)leftToRightWithId:(id)reference;

- (ADXConstraintReference *)marginWithInt:(int32_t)value;

- (ADXConstraintReference *)marginWithId:(id)marginValue;

- (ADXConstraintReference *)marginGoneWithInt:(int32_t)value;

- (ADXConstraintReference *)pivotXWithFloat:(float)x;

- (ADXConstraintReference *)pivotYWithFloat:(float)y;

- (ADXConstraintReference *)right;

- (ADXConstraintReference *)rightToLeftWithId:(id)reference;

- (ADXConstraintReference *)rightToRightWithId:(id)reference;

- (ADXConstraintReference *)rotationXWithFloat:(float)x;

- (ADXConstraintReference *)rotationYWithFloat:(float)y;

- (ADXConstraintReference *)rotationZWithFloat:(float)z;

- (ADXConstraintReference *)scaleXWithFloat:(float)x;

- (ADXConstraintReference *)scaleYWithFloat:(float)y;

- (void)setConstraintWidgetWithADXConstraintWidget:(ADXConstraintWidget *)widget;

- (void)setFacadeWithADXFacade:(id<ADXFacade>)facade;

- (ADXConstraintReference *)setHeightWithADXDimension:(ADXDimension *)dimension;

- (void)setHorizontalChainStyleWithInt:(int32_t)chainStyle;

- (void)setKeyWithId:(id)key;

- (void)setTagWithNSString:(NSString *)tag;

- (void)setVerticalChainStyleWithInt:(int32_t)chainStyle;

- (void)setViewWithId:(id)view;

- (ADXConstraintReference *)setWidthWithADXDimension:(ADXDimension *)dimension;

- (ADXConstraintReference *)start;

- (ADXConstraintReference *)startToEndWithId:(id)reference;

- (ADXConstraintReference *)startToStartWithId:(id)reference;

- (ADXConstraintReference *)top;

- (ADXConstraintReference *)topToBottomWithId:(id)reference;

- (ADXConstraintReference *)topToTopWithId:(id)reference;

- (ADXConstraintReference *)translationXWithFloat:(float)x;

- (ADXConstraintReference *)translationYWithFloat:(float)y;

- (ADXConstraintReference *)translationZWithFloat:(float)z;

/*!
 @brief Validate the constraints
 */
- (void)validate;

- (ADXConstraintReference *)verticalBiasWithFloat:(float)value;

- (ADXConstraintReference *)visibilityWithInt:(int32_t)visibility;

- (ADXConstraintReference *)widthWithADXDimension:(ADXDimension *)dimension;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXConstraintReference)

J2OBJC_FIELD_SETTER(ADXConstraintReference, mState_, ADXState *)
J2OBJC_FIELD_SETTER(ADXConstraintReference, mTag_, NSString *)
J2OBJC_FIELD_SETTER(ADXConstraintReference, mFacade_, id<ADXFacade>)
J2OBJC_FIELD_SETTER(ADXConstraintReference, mLeftToLeft_, id)
J2OBJC_FIELD_SETTER(ADXConstraintReference, mLeftToRight_, id)
J2OBJC_FIELD_SETTER(ADXConstraintReference, mRightToLeft_, id)
J2OBJC_FIELD_SETTER(ADXConstraintReference, mRightToRight_, id)
J2OBJC_FIELD_SETTER(ADXConstraintReference, mStartToStart_, id)
J2OBJC_FIELD_SETTER(ADXConstraintReference, mStartToEnd_, id)
J2OBJC_FIELD_SETTER(ADXConstraintReference, mEndToStart_, id)
J2OBJC_FIELD_SETTER(ADXConstraintReference, mEndToEnd_, id)
J2OBJC_FIELD_SETTER(ADXConstraintReference, mTopToTop_, id)
J2OBJC_FIELD_SETTER(ADXConstraintReference, mTopToBottom_, id)
J2OBJC_FIELD_SETTER(ADXConstraintReference, mBottomToTop_, id)
J2OBJC_FIELD_SETTER(ADXConstraintReference, mBottomToBottom_, id)
J2OBJC_FIELD_SETTER(ADXConstraintReference, mBaselineToBaseline_, id)
J2OBJC_FIELD_SETTER(ADXConstraintReference, mCircularConstraint_, id)
J2OBJC_FIELD_SETTER(ADXConstraintReference, mLast_, ADXState_Constraint *)
J2OBJC_FIELD_SETTER(ADXConstraintReference, mHorizontalDimension_, ADXDimension *)
J2OBJC_FIELD_SETTER(ADXConstraintReference, mVerticalDimension_, ADXDimension *)

FOUNDATION_EXPORT void ADXConstraintReference_initWithADXState_(ADXConstraintReference *self, ADXState *state);

FOUNDATION_EXPORT ADXConstraintReference *new_ADXConstraintReference_initWithADXState_(ADXState *state) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXConstraintReference *create_ADXConstraintReference_initWithADXState_(ADXState *state);

J2OBJC_TYPE_LITERAL_HEADER(ADXConstraintReference)

@compatibility_alias AndroidxConstraintlayoutCoreStateConstraintReference ADXConstraintReference;


#endif

#if !defined (ADXConstraintReference_ConstraintReferenceFactory_) && (INCLUDE_ALL_ConstraintReference || defined(INCLUDE_ADXConstraintReference_ConstraintReferenceFactory))
#define ADXConstraintReference_ConstraintReferenceFactory_

@class ADXConstraintReference;
@class ADXState;

@protocol ADXConstraintReference_ConstraintReferenceFactory < JavaObject >

- (ADXConstraintReference *)createWithADXState:(ADXState *)state;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXConstraintReference_ConstraintReferenceFactory)

J2OBJC_TYPE_LITERAL_HEADER(ADXConstraintReference_ConstraintReferenceFactory)


#endif

#if !defined (ADXConstraintReference_IncorrectConstraintException_) && (INCLUDE_ALL_ConstraintReference || defined(INCLUDE_ADXConstraintReference_IncorrectConstraintException))
#define ADXConstraintReference_IncorrectConstraintException_

#define RESTRICT_JavaLangException 1
#define INCLUDE_JavaLangException 1
#include "java/lang/Exception.h"

@class JavaLangBoolean;
@class JavaLangThrowable;
@class JavaUtilArrayList;
@class NSString;

@interface ADXConstraintReference_IncorrectConstraintException : JavaLangException

#pragma mark Public

- (instancetype)initWithJavaUtilArrayList:(JavaUtilArrayList *)errors;

- (JavaUtilArrayList *)getErrors;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1
                     withBoolean:(bool)arg2
                     withBoolean:(bool)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXConstraintReference_IncorrectConstraintException)

FOUNDATION_EXPORT void ADXConstraintReference_IncorrectConstraintException_initWithJavaUtilArrayList_(ADXConstraintReference_IncorrectConstraintException *self, JavaUtilArrayList *errors);

FOUNDATION_EXPORT ADXConstraintReference_IncorrectConstraintException *new_ADXConstraintReference_IncorrectConstraintException_initWithJavaUtilArrayList_(JavaUtilArrayList *errors) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXConstraintReference_IncorrectConstraintException *create_ADXConstraintReference_IncorrectConstraintException_initWithJavaUtilArrayList_(JavaUtilArrayList *errors);

J2OBJC_TYPE_LITERAL_HEADER(ADXConstraintReference_IncorrectConstraintException)


#endif

#pragma pop_macro("INCLUDE_ALL_ConstraintReference")
