//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\motion\widget\KeyPosition.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_KeyPosition")
#ifdef RESTRICT_KeyPosition
#define INCLUDE_ALL_KeyPosition 0
#else
#define INCLUDE_ALL_KeyPosition 1
#endif
#undef RESTRICT_KeyPosition

#if !defined (ADXKeyPosition_) && (INCLUDE_ALL_KeyPosition || defined(INCLUDE_ADXKeyPosition))
#define ADXKeyPosition_

#define RESTRICT_KeyPositionBase 1
#define INCLUDE_ADXKeyPositionBase 1
#include "KeyPositionBase.h"

@class ADAttributeSet;
@class ADContext;
@class ADRectF;
@class ADView;
@class ADXKey;
@class IOSFloatArray;
@class IOSObjectArray;
@class JavaUtilHashMap;

/*!
 @brief Provide the passive data structure to get KeyPosition information form XML
 */
@interface ADXKeyPosition : ADXKeyPositionBase {
 @public
  NSString *mTransitionEasing_;
  jint mPathMotionArc_;
  jint mDrawPath_;
  jfloat mPercentWidth_;
  jfloat mPercentHeight_;
  jfloat mPercentX_;
  jfloat mPercentY_;
  jfloat mAltPercentX_;
  jfloat mAltPercentY_;
  jint mPositionType_;
}

#pragma mark Public

- (instancetype)init;

- (void)addValuesWithJavaUtilHashMap:(JavaUtilHashMap *)splines;

- (ADXKey *)java_clone;

- (ADXKey *)copy__WithADXKey:(ADXKey *)src OBJC_METHOD_FAMILY_NONE;

- (jboolean)intersectsWithInt:(jint)layoutWidth
                      withInt:(jint)layoutHeight
                  withADRectF:(ADRectF *)start
                  withADRectF:(ADRectF *)end
                    withFloat:(jfloat)x
                    withFloat:(jfloat)y;

- (void)load__WithADContext:(ADContext *)context
         withADAttributeSet:(ADAttributeSet *)attrs;

- (void)positionAttributesWithADView:(ADView *)view
                         withADRectF:(ADRectF *)start
                         withADRectF:(ADRectF *)end
                           withFloat:(jfloat)x
                           withFloat:(jfloat)y
                   withNSStringArray:(IOSObjectArray *)attribute
                      withFloatArray:(IOSFloatArray *)value;

- (void)setTypeWithInt:(jint)type;

- (void)setValueWithNSString:(NSString *)tag
                      withId:(id)value;

#pragma mark Package-Private

- (void)calcPositionWithInt:(jint)layoutWidth
                    withInt:(jint)layoutHeight
                  withFloat:(jfloat)start_x
                  withFloat:(jfloat)start_y
                  withFloat:(jfloat)end_x
                  withFloat:(jfloat)end_y;

- (jfloat)getPositionX;

- (jfloat)getPositionY;

- (void)positionCartAttributesWithADRectF:(ADRectF *)start
                              withADRectF:(ADRectF *)end
                                withFloat:(jfloat)x
                                withFloat:(jfloat)y
                        withNSStringArray:(IOSObjectArray *)attribute
                           withFloatArray:(IOSFloatArray *)value;

- (void)positionPathAttributesWithADRectF:(ADRectF *)start
                              withADRectF:(ADRectF *)end
                                withFloat:(jfloat)x
                                withFloat:(jfloat)y
                        withNSStringArray:(IOSObjectArray *)attribute
                           withFloatArray:(IOSFloatArray *)value;

- (void)positionScreenAttributesWithADView:(ADView *)view
                               withADRectF:(ADRectF *)start
                               withADRectF:(ADRectF *)end
                                 withFloat:(jfloat)x
                                 withFloat:(jfloat)y
                         withNSStringArray:(IOSObjectArray *)attribute
                            withFloatArray:(IOSFloatArray *)value;

// Disallowed inherited constructors, do not use.

- (instancetype)initPackagePrivate NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXKeyPosition)

J2OBJC_FIELD_SETTER(ADXKeyPosition, mTransitionEasing_, NSString *)

inline NSString *ADXKeyPosition_get_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ADXKeyPosition_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXKeyPosition, NAME, NSString *)

inline jint ADXKeyPosition_get_TYPE_SCREEN(void);
#define ADXKeyPosition_TYPE_SCREEN 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXKeyPosition, TYPE_SCREEN, jint)

inline jint ADXKeyPosition_get_TYPE_PATH(void);
#define ADXKeyPosition_TYPE_PATH 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXKeyPosition, TYPE_PATH, jint)

inline jint ADXKeyPosition_get_TYPE_CARTESIAN(void);
#define ADXKeyPosition_TYPE_CARTESIAN 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXKeyPosition, TYPE_CARTESIAN, jint)

inline NSString *ADXKeyPosition_get_TRANSITION_EASING(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ADXKeyPosition_TRANSITION_EASING;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXKeyPosition, TRANSITION_EASING, NSString *)

inline NSString *ADXKeyPosition_get_DRAWPATH(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ADXKeyPosition_DRAWPATH;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXKeyPosition, DRAWPATH, NSString *)

inline NSString *ADXKeyPosition_get_PERCENT_WIDTH(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ADXKeyPosition_PERCENT_WIDTH;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXKeyPosition, PERCENT_WIDTH, NSString *)

inline NSString *ADXKeyPosition_get_PERCENT_HEIGHT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ADXKeyPosition_PERCENT_HEIGHT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXKeyPosition, PERCENT_HEIGHT, NSString *)

inline NSString *ADXKeyPosition_get_SIZE_PERCENT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ADXKeyPosition_SIZE_PERCENT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXKeyPosition, SIZE_PERCENT, NSString *)

inline NSString *ADXKeyPosition_get_PERCENT_X(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ADXKeyPosition_PERCENT_X;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXKeyPosition, PERCENT_X, NSString *)

inline NSString *ADXKeyPosition_get_PERCENT_Y(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ADXKeyPosition_PERCENT_Y;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXKeyPosition, PERCENT_Y, NSString *)

inline jint ADXKeyPosition_get_KEY_TYPE(void);
#define ADXKeyPosition_KEY_TYPE 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXKeyPosition, KEY_TYPE, jint)

FOUNDATION_EXPORT void ADXKeyPosition_init(ADXKeyPosition *self);

FOUNDATION_EXPORT ADXKeyPosition *new_ADXKeyPosition_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXKeyPosition *create_ADXKeyPosition_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADXKeyPosition)

@compatibility_alias AndroidxConstraintlayoutMotionWidgetKeyPosition ADXKeyPosition;

#endif

#pragma pop_macro("INCLUDE_ALL_KeyPosition")
