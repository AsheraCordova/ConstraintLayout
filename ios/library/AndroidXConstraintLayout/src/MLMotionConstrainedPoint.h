//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\motion\widget\MLMotionConstrainedPoint.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_MLMotionConstrainedPoint")
#ifdef RESTRICT_MLMotionConstrainedPoint
#define INCLUDE_ALL_MLMotionConstrainedPoint 0
#else
#define INCLUDE_ALL_MLMotionConstrainedPoint 1
#endif
#undef RESTRICT_MLMotionConstrainedPoint

#if !defined (ADXMLMotionConstrainedPoint_) && (INCLUDE_ALL_MLMotionConstrainedPoint || defined(INCLUDE_ADXMLMotionConstrainedPoint))
#define ADXMLMotionConstrainedPoint_

#define RESTRICT_JavaLangComparable 1
#define INCLUDE_JavaLangComparable 1
#include "java/lang/Comparable.h"

@class ADRect;
@class ADView;
@class ADXConstraintSet;
@class ADXConstraintSet_Constraint;
@class IOSBooleanArray;
@class IOSDoubleArray;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaLangBoolean;
@class JavaLangFloat;
@class JavaLangInteger;
@class JavaUtilHashMap;
@class JavaUtilHashSet;
@class JavaUtilLinkedHashMap;
@class NSString;

/*!
 @brief All the parameter it extracts from a ConstraintSet/View
 */
@interface ADXMLMotionConstrainedPoint : NSObject < JavaLangComparable > {
 @public
  int32_t mVisibilityMode_;
  int32_t visibility_;
  float rotationY_;
  JavaUtilLinkedHashMap *attributes_;
  int32_t mMode_;
  IOSDoubleArray *mTempValue_;
  IOSDoubleArray *mTempDelta_;
}

#pragma mark Public

- (instancetype)initPackagePrivate;

- (void)addValuesWithJavaUtilHashMap:(JavaUtilHashMap *)splines
                             withInt:(int32_t)mFramePosition;

- (void)applyParametersWithADXConstraintSet_Constraint:(ADXConstraintSet_Constraint *)c;

- (void)applyParametersWithADView:(ADView *)view;

- (int32_t)compareToWithId:(ADXMLMotionConstrainedPoint *)o;

/*!
 @brief Sets the state of the position given a rect, constraintset, rotation and viewid
 @param cw
 @param constraintSet
 @param rotation
 @param viewId
 */
- (void)setStateWithADRect:(ADRect *)cw
      withADXConstraintSet:(ADXConstraintSet *)constraintSet
                   withInt:(int32_t)rotation
                   withInt:(int32_t)viewId;

/*!
 @param rect assumes pre rotated
 @param view
 @param rotation mode Surface.ROTATION_0,Surface.ROTATION_90...
 */
- (void)setStateWithADRect:(ADRect *)rect
                withADView:(ADView *)view
                   withInt:(int32_t)rotation
                 withFloat:(float)prevous;

- (void)setStateWithADView:(ADView *)view;

#pragma mark Package-Private

- (void)differentWithADXMLMotionConstrainedPoint:(ADXMLMotionConstrainedPoint *)points
                                withBooleanArray:(IOSBooleanArray *)mask
                               withNSStringArray:(IOSObjectArray *)custom;

/*!
 @brief Given the start and end points define Keys that need to be built
 @param points
 @param keySet
 */
- (void)differentWithADXMLMotionConstrainedPoint:(ADXMLMotionConstrainedPoint *)points
                             withJavaUtilHashSet:(JavaUtilHashSet *)keySet;

- (void)fillStandardWithDoubleArray:(IOSDoubleArray *)data
                       withIntArray:(IOSIntArray *)toUse;

- (int32_t)getCustomDataWithNSString:(NSString *)name
                     withDoubleArray:(IOSDoubleArray *)value
                             withInt:(int32_t)offset;

- (int32_t)getCustomDataCountWithNSString:(NSString *)name;

- (bool)hasCustomDataWithNSString:(NSString *)name;

- (void)setBoundsWithFloat:(float)x
                 withFloat:(float)y
                 withFloat:(float)w
                 withFloat:(float)h;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ADXMLMotionConstrainedPoint)

J2OBJC_FIELD_SETTER(ADXMLMotionConstrainedPoint, attributes_, JavaUtilLinkedHashMap *)
J2OBJC_FIELD_SETTER(ADXMLMotionConstrainedPoint, mTempValue_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(ADXMLMotionConstrainedPoint, mTempDelta_, IOSDoubleArray *)

inline NSString *ADXMLMotionConstrainedPoint_get_TAG(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ADXMLMotionConstrainedPoint_TAG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXMLMotionConstrainedPoint, TAG, NSString *)

inline bool ADXMLMotionConstrainedPoint_get_DEBUG(void);
#define ADXMLMotionConstrainedPoint_DEBUG false
J2OBJC_STATIC_FIELD_CONSTANT(ADXMLMotionConstrainedPoint, DEBUG, bool)

inline int32_t ADXMLMotionConstrainedPoint_get_PERPENDICULAR(void);
#define ADXMLMotionConstrainedPoint_PERPENDICULAR 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXMLMotionConstrainedPoint, PERPENDICULAR, int32_t)

inline int32_t ADXMLMotionConstrainedPoint_get_CARTESIAN(void);
#define ADXMLMotionConstrainedPoint_CARTESIAN 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXMLMotionConstrainedPoint, CARTESIAN, int32_t)

inline IOSObjectArray *ADXMLMotionConstrainedPoint_get_names(void);
inline IOSObjectArray *ADXMLMotionConstrainedPoint_set_names(IOSObjectArray *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *ADXMLMotionConstrainedPoint_names;
J2OBJC_STATIC_FIELD_OBJ(ADXMLMotionConstrainedPoint, names, IOSObjectArray *)

FOUNDATION_EXPORT void ADXMLMotionConstrainedPoint_initPackagePrivate(ADXMLMotionConstrainedPoint *self);

FOUNDATION_EXPORT ADXMLMotionConstrainedPoint *new_ADXMLMotionConstrainedPoint_initPackagePrivate(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXMLMotionConstrainedPoint *create_ADXMLMotionConstrainedPoint_initPackagePrivate(void);

J2OBJC_TYPE_LITERAL_HEADER(ADXMLMotionConstrainedPoint)

@compatibility_alias AndroidxConstraintlayoutMotionWidgetMLMotionConstrainedPoint ADXMLMotionConstrainedPoint;


#endif

#pragma pop_macro("INCLUDE_ALL_MLMotionConstrainedPoint")
