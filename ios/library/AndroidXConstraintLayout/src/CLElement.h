//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\core\parser\CLElement.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CLElement")
#ifdef RESTRICT_CLElement
#define INCLUDE_ALL_CLElement 0
#else
#define INCLUDE_ALL_CLElement 1
#endif
#undef RESTRICT_CLElement

#if !defined (ADXCLElement_) && (INCLUDE_ALL_CLElement || defined(INCLUDE_ADXCLElement))
#define ADXCLElement_

@class ADXCLContainer;
@class IOSCharArray;
@class JavaLangBoolean;
@class JavaLangFloat;
@class JavaLangInteger;
@class JavaLangLong;
@class JavaLangStringBuilder;
@class NSString;

@interface ADXCLElement : NSObject {
 @public
  int64_t start_;
  int64_t end_;
  ADXCLContainer *mContainer_;
}

#pragma mark Public

- (instancetype)initWithCharArray:(IOSCharArray *)content;

- (NSString *)content;

- (ADXCLElement *)getContainer;

/*!
 @brief The character index this element was ended on
 */
- (int64_t)getEnd;

- (float)getFloat;

- (int32_t)getInt;

/*!
 @brief get the line Number
 @return return the line number this element was on
 */
- (int32_t)getLine;

/*!
 @brief The character index this element was started on
 */
- (int64_t)getStart;

- (bool)isDone;

- (bool)isStarted;

- (bool)notStarted;

- (void)setContainerWithADXCLContainer:(ADXCLContainer *)element;

- (void)setEndWithLong:(int64_t)end;

- (void)setLineWithInt:(int32_t)line;

- (void)setStartWithLong:(int64_t)start;

- (NSString *)description;

#pragma mark Protected

- (void)addIndentWithJavaLangStringBuilder:(JavaLangStringBuilder *)builder
                                   withInt:(int32_t)indent;

- (NSString *)getDebugName;

- (NSString *)getStrClass;

- (NSString *)toFormattedJSONWithInt:(int32_t)indent
                             withInt:(int32_t)forceIndent;

- (NSString *)toJSON;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXCLElement)

J2OBJC_FIELD_SETTER(ADXCLElement, mContainer_, ADXCLContainer *)

inline int32_t ADXCLElement_get_MAX_LINE(void);
inline int32_t ADXCLElement_set_MAX_LINE(int32_t value);
inline int32_t *ADXCLElement_getRef_MAX_LINE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT int32_t ADXCLElement_MAX_LINE;
J2OBJC_STATIC_FIELD_PRIMITIVE(ADXCLElement, MAX_LINE, int32_t)

inline int32_t ADXCLElement_get_BASE_INDENT(void);
inline int32_t ADXCLElement_set_BASE_INDENT(int32_t value);
inline int32_t *ADXCLElement_getRef_BASE_INDENT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT int32_t ADXCLElement_BASE_INDENT;
J2OBJC_STATIC_FIELD_PRIMITIVE(ADXCLElement, BASE_INDENT, int32_t)

FOUNDATION_EXPORT void ADXCLElement_initWithCharArray_(ADXCLElement *self, IOSCharArray *content);

FOUNDATION_EXPORT ADXCLElement *new_ADXCLElement_initWithCharArray_(IOSCharArray *content) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXCLElement *create_ADXCLElement_initWithCharArray_(IOSCharArray *content);

J2OBJC_TYPE_LITERAL_HEADER(ADXCLElement)

@compatibility_alias AndroidxConstraintlayoutCoreParserCLElement ADXCLElement;


#endif

#pragma pop_macro("INCLUDE_ALL_CLElement")
