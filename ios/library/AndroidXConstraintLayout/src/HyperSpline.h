//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\core\motion\utils\HyperSpline.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_HyperSpline")
#ifdef RESTRICT_HyperSpline
#define INCLUDE_ALL_HyperSpline 0
#else
#define INCLUDE_ALL_HyperSpline 1
#endif
#undef RESTRICT_HyperSpline

#if !defined (ADXHyperSpline_) && (INCLUDE_ALL_HyperSpline || defined(INCLUDE_ADXHyperSpline))
#define ADXHyperSpline_

@class IOSDoubleArray;
@class IOSFloatArray;
@class IOSObjectArray;
@class JavaLangDouble;
@class JavaLangInteger;

/*!
 @brief Provides spline interpolation code.
 Currently not used but it is anticipated that we will be using it in the
  KeyMotion
 */
@interface ADXHyperSpline : NSObject {
 @public
  int32_t mPoints_;
  IOSObjectArray *mCurve_;
  int32_t mDimensionality_;
  IOSDoubleArray *mCurveLength_;
  double mTotalLength_;
  IOSObjectArray *mCtl_;
}

#pragma mark Public

- (instancetype)init;

/*!
 @brief Spline in N dimensions
 @param points [mPoints][dimensionality]
 */
- (instancetype)initWithDoubleArray2:(IOSObjectArray *)points;

- (double)approxLengthWithADXHyperSpline_CubicArray:(IOSObjectArray *)curve;

- (void)getPosWithDouble:(double)p
         withDoubleArray:(IOSDoubleArray *)x;

- (void)getPosWithDouble:(double)p
          withFloatArray:(IOSFloatArray *)x;

- (double)getPosWithDouble:(double)p
                   withInt:(int32_t)splineNumber;

- (void)getVelocityWithDouble:(double)p
              withDoubleArray:(IOSDoubleArray *)v;

- (void)setupWithDoubleArray2:(IOSObjectArray *)points;

#pragma mark Package-Private

+ (IOSObjectArray *)calcNaturalCubicWithInt:(int32_t)n
                            withDoubleArray:(IOSDoubleArray *)x;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXHyperSpline)

J2OBJC_FIELD_SETTER(ADXHyperSpline, mCurve_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ADXHyperSpline, mCurveLength_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(ADXHyperSpline, mCtl_, IOSObjectArray *)

FOUNDATION_EXPORT void ADXHyperSpline_initWithDoubleArray2_(ADXHyperSpline *self, IOSObjectArray *points);

FOUNDATION_EXPORT ADXHyperSpline *new_ADXHyperSpline_initWithDoubleArray2_(IOSObjectArray *points) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXHyperSpline *create_ADXHyperSpline_initWithDoubleArray2_(IOSObjectArray *points);

FOUNDATION_EXPORT void ADXHyperSpline_init(ADXHyperSpline *self);

FOUNDATION_EXPORT ADXHyperSpline *new_ADXHyperSpline_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXHyperSpline *create_ADXHyperSpline_init(void);

FOUNDATION_EXPORT IOSObjectArray *ADXHyperSpline_calcNaturalCubicWithInt_withDoubleArray_(int32_t n, IOSDoubleArray *x);

J2OBJC_TYPE_LITERAL_HEADER(ADXHyperSpline)

@compatibility_alias AndroidxConstraintlayoutCoreMotionUtilsHyperSpline ADXHyperSpline;


#endif

#if !defined (ADXHyperSpline_Cubic_) && (INCLUDE_ALL_HyperSpline || defined(INCLUDE_ADXHyperSpline_Cubic))
#define ADXHyperSpline_Cubic_

@class JavaLangDouble;

@interface ADXHyperSpline_Cubic : NSObject {
 @public
  double mA_;
  double mB_;
  double mC_;
  double mD_;
}

#pragma mark Public

- (instancetype)initWithDouble:(double)a
                    withDouble:(double)b
                    withDouble:(double)c
                    withDouble:(double)d;

- (double)evalWithDouble:(double)u;

- (double)velWithDouble:(double)v;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXHyperSpline_Cubic)

inline double ADXHyperSpline_Cubic_get_THIRD(void);
#define ADXHyperSpline_Cubic_THIRD 0.3333333333333333
J2OBJC_STATIC_FIELD_CONSTANT(ADXHyperSpline_Cubic, THIRD, double)

inline double ADXHyperSpline_Cubic_get_HALF(void);
#define ADXHyperSpline_Cubic_HALF 0.5
J2OBJC_STATIC_FIELD_CONSTANT(ADXHyperSpline_Cubic, HALF, double)

FOUNDATION_EXPORT void ADXHyperSpline_Cubic_initWithDouble_withDouble_withDouble_withDouble_(ADXHyperSpline_Cubic *self, double a, double b, double c, double d);

FOUNDATION_EXPORT ADXHyperSpline_Cubic *new_ADXHyperSpline_Cubic_initWithDouble_withDouble_withDouble_withDouble_(double a, double b, double c, double d) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXHyperSpline_Cubic *create_ADXHyperSpline_Cubic_initWithDouble_withDouble_withDouble_withDouble_(double a, double b, double c, double d);

J2OBJC_TYPE_LITERAL_HEADER(ADXHyperSpline_Cubic)


#endif

#pragma pop_macro("INCLUDE_ALL_HyperSpline")
