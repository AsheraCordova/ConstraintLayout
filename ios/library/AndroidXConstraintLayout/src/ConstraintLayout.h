//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\widget\ConstraintLayout.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ConstraintLayout")
#ifdef RESTRICT_ConstraintLayout
#define INCLUDE_ALL_ConstraintLayout 0
#else
#define INCLUDE_ALL_ConstraintLayout 1
#endif
#undef RESTRICT_ConstraintLayout

#if !defined (ADXConstraintLayout_) && (INCLUDE_ALL_ConstraintLayout || defined(INCLUDE_ADXConstraintLayout))
#define ADXConstraintLayout_

#define RESTRICT_ViewGroup 1
#define INCLUDE_ADViewGroup 1
#include "ViewGroup.h"

@class ADSparseArray;
@class ADView;
@class ADXConstraintLayoutStates;
@class ADXConstraintLayout_LayoutParams;
@class ADXConstraintLayout_Measurer;
@class ADXConstraintSet;
@class ADXConstraintWidget;
@class ADXConstraintWidgetContainer;
@class ADXSharedValues;
@class JavaLangBoolean;
@class JavaLangInteger;
@class NSString;

@interface ADXConstraintLayout : ADViewGroup {
 @public
  ADSparseArray *mChildrenByIds_;
  ADXConstraintWidgetContainer *mLayoutWidget_;
  bool mDirtyHierarchy_;
  ADXConstraintLayoutStates *mConstraintLayoutSpec_;
  int32_t mLastMeasureWidthSize_;
  int32_t mLastMeasureHeightSize_;
  int32_t mLastMeasureWidthMode_;
  int32_t mLastMeasureHeightMode_;
  ADXConstraintLayout_Measurer *mMeasurer_;
}

#pragma mark Public

- (instancetype)init;

- (id)getDesignInformationWithInt:(int32_t)type
                           withId:(id)value;

- (int32_t)getMaxHeight;

- (int32_t)getMaxWidth;

- (int32_t)getMinHeight;

- (int32_t)getMinWidth;

- (int32_t)getOptimizationLevel;

+ (ADXSharedValues *)getSharedValues;

- (ADView *)getViewByIdWithInt:(int32_t)id_;

- (ADXConstraintWidget *)getViewWidgetWithADView:(ADView *)view;

- (void)onViewAddedWithADView:(ADView *)view;

- (void)onViewRemovedWithADView:(ADView *)view;

- (void)release__;

- (void)requestLayout;

- (void)setConstraintSetWithADXConstraintSet:(ADXConstraintSet *)set;

- (void)setDesignInformationWithInt:(int32_t)type
                             withId:(id)value1
                             withId:(id)value2;

- (void)setMaxHeightWithInt:(int32_t)value;

- (void)setMaxWidthWithInt:(int32_t)value;

- (void)setMinHeightWithInt:(int32_t)value;

- (void)setMinWidthWithInt:(int32_t)value;

- (void)setOptimizationLevelWithInt:(int32_t)level;

#pragma mark Protected

- (void)applyConstraintsFromLayoutParamsWithBoolean:(bool)isInEditMode
                                         withADView:(ADView *)child
                            withADXConstraintWidget:(ADXConstraintWidget *)widget
               withADXConstraintLayout_LayoutParams:(ADXConstraintLayout_LayoutParams *)layoutParams
                                  withADSparseArray:(ADSparseArray *)idToWidget;

- (ADXConstraintLayout_LayoutParams *)generateDefaultLayoutParams;

- (bool)isRtl;

- (void)onLayoutWithBoolean:(bool)changed
                    withInt:(int32_t)left
                    withInt:(int32_t)top
                    withInt:(int32_t)right
                    withInt:(int32_t)bottom;

- (void)onMeasureWithInt:(int32_t)widthMeasureSpec
                 withInt:(int32_t)heightMeasureSpec;

- (void)resolveMeasuredDimensionWithInt:(int32_t)widthMeasureSpec
                                withInt:(int32_t)heightMeasureSpec
                                withInt:(int32_t)measuredWidth
                                withInt:(int32_t)measuredHeight
                            withBoolean:(bool)isWidthMeasuredTooSmall
                            withBoolean:(bool)isHeightMeasuredTooSmall;

- (void)resolveSystemWithADXConstraintWidgetContainer:(ADXConstraintWidgetContainer *)layout
                                              withInt:(int32_t)optimizationLevel
                                              withInt:(int32_t)widthMeasureSpec
                                              withInt:(int32_t)heightMeasureSpec;

- (void)setSelfDimensionBehaviourWithADXConstraintWidgetContainer:(ADXConstraintWidgetContainer *)layout
                                                          withInt:(int32_t)widthMode
                                                          withInt:(int32_t)widthSize
                                                          withInt:(int32_t)heightMode
                                                          withInt:(int32_t)heightSize;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXConstraintLayout)

J2OBJC_FIELD_SETTER(ADXConstraintLayout, mChildrenByIds_, ADSparseArray *)
J2OBJC_FIELD_SETTER(ADXConstraintLayout, mLayoutWidget_, ADXConstraintWidgetContainer *)
J2OBJC_FIELD_SETTER(ADXConstraintLayout, mConstraintLayoutSpec_, ADXConstraintLayoutStates *)
J2OBJC_FIELD_SETTER(ADXConstraintLayout, mMeasurer_, ADXConstraintLayout_Measurer *)

inline NSString *ADXConstraintLayout_get_VERSION(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ADXConstraintLayout_VERSION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXConstraintLayout, VERSION, NSString *)

inline int32_t ADXConstraintLayout_get_DESIGN_INFO_ID(void);
#define ADXConstraintLayout_DESIGN_INFO_ID 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXConstraintLayout, DESIGN_INFO_ID, int32_t)

FOUNDATION_EXPORT ADXSharedValues *ADXConstraintLayout_getSharedValues(void);

FOUNDATION_EXPORT void ADXConstraintLayout_init(ADXConstraintLayout *self);

FOUNDATION_EXPORT ADXConstraintLayout *new_ADXConstraintLayout_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXConstraintLayout *create_ADXConstraintLayout_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADXConstraintLayout)

@compatibility_alias AndroidxConstraintlayoutWidgetConstraintLayout ADXConstraintLayout;


#endif

#if !defined (ADXConstraintLayout_Measurer_) && (INCLUDE_ALL_ConstraintLayout || defined(INCLUDE_ADXConstraintLayout_Measurer))
#define ADXConstraintLayout_Measurer_

#define RESTRICT_BasicMeasure 1
#define INCLUDE_ADXBasicMeasure_Measurer 1
#include "BasicMeasure.h"

@class ADXBasicMeasure_Measure;
@class ADXConstraintLayout;
@class ADXConstraintWidget;
@class JavaLangInteger;

@interface ADXConstraintLayout_Measurer : NSObject < ADXBasicMeasure_Measurer > {
 @public
  WEAK_ ADXConstraintLayout *layout_;
  int32_t paddingTop_;
  int32_t paddingBottom_;
  int32_t paddingWidth_;
  int32_t paddingHeight_;
  int32_t layoutWidthSpec_;
  int32_t layoutHeightSpec_;
}

#pragma mark Public

- (instancetype)initWithADXConstraintLayout:(ADXConstraintLayout *)outer$
                    withADXConstraintLayout:(ADXConstraintLayout *)l;

- (void)captureLayoutInfoWithInt:(int32_t)widthSpec
                         withInt:(int32_t)heightSpec
                         withInt:(int32_t)top
                         withInt:(int32_t)bottom
                         withInt:(int32_t)width
                         withInt:(int32_t)height;

- (void)didMeasures;

- (void)measureWithADXConstraintWidget:(ADXConstraintWidget *)widget
           withADXBasicMeasure_Measure:(ADXBasicMeasure_Measure *)measure;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXConstraintLayout_Measurer)

FOUNDATION_EXPORT void ADXConstraintLayout_Measurer_initWithADXConstraintLayout_withADXConstraintLayout_(ADXConstraintLayout_Measurer *self, ADXConstraintLayout *outer$, ADXConstraintLayout *l);

FOUNDATION_EXPORT ADXConstraintLayout_Measurer *new_ADXConstraintLayout_Measurer_initWithADXConstraintLayout_withADXConstraintLayout_(ADXConstraintLayout *outer$, ADXConstraintLayout *l) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXConstraintLayout_Measurer *create_ADXConstraintLayout_Measurer_initWithADXConstraintLayout_withADXConstraintLayout_(ADXConstraintLayout *outer$, ADXConstraintLayout *l);

J2OBJC_TYPE_LITERAL_HEADER(ADXConstraintLayout_Measurer)


#endif

#if !defined (ADXConstraintLayout_LayoutParams_) && (INCLUDE_ALL_ConstraintLayout || defined(INCLUDE_ADXConstraintLayout_LayoutParams))
#define ADXConstraintLayout_LayoutParams_

#define RESTRICT_ViewGroup 1
#define INCLUDE_ADViewGroup_MarginLayoutParams 1
#include "ViewGroup.h"

@class ADViewGroup_LayoutParams;
@class ADXConstraintWidget;
@class JavaLangBoolean;
@class JavaLangFloat;
@class JavaLangInteger;
@class NSString;

@interface ADXConstraintLayout_LayoutParams : ADViewGroup_MarginLayoutParams {
 @public
  int32_t guideBegin_;
  int32_t guideEnd_;
  float guidePercent_;
  int32_t leftToLeft_;
  int32_t leftToRight_;
  int32_t rightToLeft_;
  int32_t rightToRight_;
  int32_t topToTop_;
  int32_t topToBottom_;
  int32_t bottomToTop_;
  int32_t bottomToBottom_;
  int32_t baselineToBaseline_;
  int32_t baselineToTop_;
  int32_t baselineToBottom_;
  int32_t circleConstraint_;
  int32_t circleRadius_;
  float circleAngle_;
  int32_t startToEnd_;
  int32_t startToStart_;
  int32_t endToStart_;
  int32_t endToEnd_;
  int32_t goneLeftMargin_;
  int32_t goneTopMargin_;
  int32_t goneRightMargin_;
  int32_t goneBottomMargin_;
  int32_t goneStartMargin_;
  int32_t goneEndMargin_;
  int32_t goneBaselineMargin_;
  int32_t baselineMargin_;
  bool widthSet_;
  bool heightSet_;
  float horizontalBias_;
  float verticalBias_;
  NSString *dimensionRatio_;
  float dimensionRatioValue_;
  int32_t dimensionRatioSide_;
  float horizontalWeight_;
  float verticalWeight_;
  int32_t horizontalChainStyle_;
  int32_t verticalChainStyle_;
  int32_t matchConstraintDefaultWidth_;
  int32_t matchConstraintDefaultHeight_;
  int32_t matchConstraintMinWidth_;
  int32_t matchConstraintMinHeight_;
  int32_t matchConstraintMaxWidth_;
  int32_t matchConstraintMaxHeight_;
  float matchConstraintPercentWidth_;
  float matchConstraintPercentHeight_;
  int32_t editorAbsoluteX_;
  int32_t editorAbsoluteY_;
  int32_t orientation_;
  bool constrainedWidth_;
  bool constrainedHeight_;
  NSString *constraintTag_;
  int32_t wrapBehaviorInParent_;
  bool horizontalDimensionFixed_;
  bool verticalDimensionFixed_;
  bool needsBaseline_;
  bool isGuideline_;
  bool isHelper_;
  bool isInPlaceholder_;
  bool isVirtualGroup_;
  int32_t resolvedLeftToLeft_;
  int32_t resolvedLeftToRight_;
  int32_t resolvedRightToLeft_;
  int32_t resolvedRightToRight_;
  int32_t resolveGoneLeftMargin_;
  int32_t resolveGoneRightMargin_;
  float resolvedHorizontalBias_;
  int32_t resolvedGuideBegin_;
  int32_t resolvedGuideEnd_;
  float resolvedGuidePercent_;
  ADXConstraintWidget *widget_;
  bool helped_;
}

#pragma mark Public

- (instancetype)initWithInt:(int32_t)width
                    withInt:(int32_t)height;

- (instancetype)initWithADXConstraintLayout_LayoutParams:(ADXConstraintLayout_LayoutParams *)source;

- (instancetype)initWithADViewGroup_LayoutParams:(ADViewGroup_LayoutParams *)source;

- (NSString *)getConstraintTag;

- (void)resolveLayoutDirectionWithInt:(int32_t)layoutDirection;

- (void)validate;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithADViewGroup_MarginLayoutParams:(ADViewGroup_MarginLayoutParams *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXConstraintLayout_LayoutParams)

J2OBJC_FIELD_SETTER(ADXConstraintLayout_LayoutParams, dimensionRatio_, NSString *)
J2OBJC_FIELD_SETTER(ADXConstraintLayout_LayoutParams, constraintTag_, NSString *)
J2OBJC_FIELD_SETTER(ADXConstraintLayout_LayoutParams, widget_, ADXConstraintWidget *)

inline int32_t ADXConstraintLayout_LayoutParams_get_MATCH_CONSTRAINT(void);
#define ADXConstraintLayout_LayoutParams_MATCH_CONSTRAINT 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXConstraintLayout_LayoutParams, MATCH_CONSTRAINT, int32_t)

inline int32_t ADXConstraintLayout_LayoutParams_get_PARENT_ID(void);
#define ADXConstraintLayout_LayoutParams_PARENT_ID 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXConstraintLayout_LayoutParams, PARENT_ID, int32_t)

inline int32_t ADXConstraintLayout_LayoutParams_get_UNSET(void);
#define ADXConstraintLayout_LayoutParams_UNSET -1
J2OBJC_STATIC_FIELD_CONSTANT(ADXConstraintLayout_LayoutParams, UNSET, int32_t)

inline int32_t ADXConstraintLayout_LayoutParams_get_GONE_UNSET(void);
#define ADXConstraintLayout_LayoutParams_GONE_UNSET ((int32_t) 0x80000000)
J2OBJC_STATIC_FIELD_CONSTANT(ADXConstraintLayout_LayoutParams, GONE_UNSET, int32_t)

inline int32_t ADXConstraintLayout_LayoutParams_get_HORIZONTAL(void);
#define ADXConstraintLayout_LayoutParams_HORIZONTAL 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXConstraintLayout_LayoutParams, HORIZONTAL, int32_t)

inline int32_t ADXConstraintLayout_LayoutParams_get_VERTICAL(void);
#define ADXConstraintLayout_LayoutParams_VERTICAL 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXConstraintLayout_LayoutParams, VERTICAL, int32_t)

inline int32_t ADXConstraintLayout_LayoutParams_get_LEFT(void);
#define ADXConstraintLayout_LayoutParams_LEFT 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXConstraintLayout_LayoutParams, LEFT, int32_t)

inline int32_t ADXConstraintLayout_LayoutParams_get_RIGHT(void);
#define ADXConstraintLayout_LayoutParams_RIGHT 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXConstraintLayout_LayoutParams, RIGHT, int32_t)

inline int32_t ADXConstraintLayout_LayoutParams_get_TOP(void);
#define ADXConstraintLayout_LayoutParams_TOP 3
J2OBJC_STATIC_FIELD_CONSTANT(ADXConstraintLayout_LayoutParams, TOP, int32_t)

inline int32_t ADXConstraintLayout_LayoutParams_get_BOTTOM(void);
#define ADXConstraintLayout_LayoutParams_BOTTOM 4
J2OBJC_STATIC_FIELD_CONSTANT(ADXConstraintLayout_LayoutParams, BOTTOM, int32_t)

inline int32_t ADXConstraintLayout_LayoutParams_get_BASELINE(void);
#define ADXConstraintLayout_LayoutParams_BASELINE 5
J2OBJC_STATIC_FIELD_CONSTANT(ADXConstraintLayout_LayoutParams, BASELINE, int32_t)

inline int32_t ADXConstraintLayout_LayoutParams_get_START(void);
#define ADXConstraintLayout_LayoutParams_START 6
J2OBJC_STATIC_FIELD_CONSTANT(ADXConstraintLayout_LayoutParams, START, int32_t)

inline int32_t ADXConstraintLayout_LayoutParams_get_END(void);
#define ADXConstraintLayout_LayoutParams_END 7
J2OBJC_STATIC_FIELD_CONSTANT(ADXConstraintLayout_LayoutParams, END, int32_t)

inline int32_t ADXConstraintLayout_LayoutParams_get_CIRCLE(void);
#define ADXConstraintLayout_LayoutParams_CIRCLE 8
J2OBJC_STATIC_FIELD_CONSTANT(ADXConstraintLayout_LayoutParams, CIRCLE, int32_t)

inline int32_t ADXConstraintLayout_LayoutParams_get_MATCH_CONSTRAINT_WRAP(void);
#define ADXConstraintLayout_LayoutParams_MATCH_CONSTRAINT_WRAP 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXConstraintLayout_LayoutParams, MATCH_CONSTRAINT_WRAP, int32_t)

inline int32_t ADXConstraintLayout_LayoutParams_get_MATCH_CONSTRAINT_SPREAD(void);
#define ADXConstraintLayout_LayoutParams_MATCH_CONSTRAINT_SPREAD 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXConstraintLayout_LayoutParams, MATCH_CONSTRAINT_SPREAD, int32_t)

inline int32_t ADXConstraintLayout_LayoutParams_get_MATCH_CONSTRAINT_PERCENT(void);
#define ADXConstraintLayout_LayoutParams_MATCH_CONSTRAINT_PERCENT 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXConstraintLayout_LayoutParams, MATCH_CONSTRAINT_PERCENT, int32_t)

inline int32_t ADXConstraintLayout_LayoutParams_get_CHAIN_SPREAD(void);
#define ADXConstraintLayout_LayoutParams_CHAIN_SPREAD 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXConstraintLayout_LayoutParams, CHAIN_SPREAD, int32_t)

inline int32_t ADXConstraintLayout_LayoutParams_get_CHAIN_SPREAD_INSIDE(void);
#define ADXConstraintLayout_LayoutParams_CHAIN_SPREAD_INSIDE 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXConstraintLayout_LayoutParams, CHAIN_SPREAD_INSIDE, int32_t)

inline int32_t ADXConstraintLayout_LayoutParams_get_CHAIN_PACKED(void);
#define ADXConstraintLayout_LayoutParams_CHAIN_PACKED 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXConstraintLayout_LayoutParams, CHAIN_PACKED, int32_t)

inline int32_t ADXConstraintLayout_LayoutParams_get_WRAP_BEHAVIOR_INCLUDED(void);
#define ADXConstraintLayout_LayoutParams_WRAP_BEHAVIOR_INCLUDED 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXConstraintLayout_LayoutParams, WRAP_BEHAVIOR_INCLUDED, int32_t)

inline int32_t ADXConstraintLayout_LayoutParams_get_WRAP_BEHAVIOR_HORIZONTAL_ONLY(void);
#define ADXConstraintLayout_LayoutParams_WRAP_BEHAVIOR_HORIZONTAL_ONLY 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXConstraintLayout_LayoutParams, WRAP_BEHAVIOR_HORIZONTAL_ONLY, int32_t)

inline int32_t ADXConstraintLayout_LayoutParams_get_WRAP_BEHAVIOR_VERTICAL_ONLY(void);
#define ADXConstraintLayout_LayoutParams_WRAP_BEHAVIOR_VERTICAL_ONLY 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXConstraintLayout_LayoutParams, WRAP_BEHAVIOR_VERTICAL_ONLY, int32_t)

inline int32_t ADXConstraintLayout_LayoutParams_get_WRAP_BEHAVIOR_SKIPPED(void);
#define ADXConstraintLayout_LayoutParams_WRAP_BEHAVIOR_SKIPPED 3
J2OBJC_STATIC_FIELD_CONSTANT(ADXConstraintLayout_LayoutParams, WRAP_BEHAVIOR_SKIPPED, int32_t)

FOUNDATION_EXPORT void ADXConstraintLayout_LayoutParams_initWithADXConstraintLayout_LayoutParams_(ADXConstraintLayout_LayoutParams *self, ADXConstraintLayout_LayoutParams *source);

FOUNDATION_EXPORT ADXConstraintLayout_LayoutParams *new_ADXConstraintLayout_LayoutParams_initWithADXConstraintLayout_LayoutParams_(ADXConstraintLayout_LayoutParams *source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXConstraintLayout_LayoutParams *create_ADXConstraintLayout_LayoutParams_initWithADXConstraintLayout_LayoutParams_(ADXConstraintLayout_LayoutParams *source);

FOUNDATION_EXPORT void ADXConstraintLayout_LayoutParams_initWithInt_withInt_(ADXConstraintLayout_LayoutParams *self, int32_t width, int32_t height);

FOUNDATION_EXPORT ADXConstraintLayout_LayoutParams *new_ADXConstraintLayout_LayoutParams_initWithInt_withInt_(int32_t width, int32_t height) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXConstraintLayout_LayoutParams *create_ADXConstraintLayout_LayoutParams_initWithInt_withInt_(int32_t width, int32_t height);

FOUNDATION_EXPORT void ADXConstraintLayout_LayoutParams_initWithADViewGroup_LayoutParams_(ADXConstraintLayout_LayoutParams *self, ADViewGroup_LayoutParams *source);

FOUNDATION_EXPORT ADXConstraintLayout_LayoutParams *new_ADXConstraintLayout_LayoutParams_initWithADViewGroup_LayoutParams_(ADViewGroup_LayoutParams *source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXConstraintLayout_LayoutParams *create_ADXConstraintLayout_LayoutParams_initWithADViewGroup_LayoutParams_(ADViewGroup_LayoutParams *source);

J2OBJC_TYPE_LITERAL_HEADER(ADXConstraintLayout_LayoutParams)


#endif

#pragma pop_macro("INCLUDE_ALL_ConstraintLayout")
