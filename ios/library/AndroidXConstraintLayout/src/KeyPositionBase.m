//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\motion\widget\KeyPositionBase.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "Key.h"
#include "KeyPositionBase.h"
#include "RectF.h"
#include "View.h"
#include "java/util/HashSet.h"


@implementation ADXKeyPositionBase

- (instancetype)initPackagePrivate {
  ADXKeyPositionBase_initPackagePrivate(self);
  return self;
}

- (void)calcPositionWithInt:(jint)layoutWidth
                    withInt:(jint)layoutHeight
                  withFloat:(jfloat)start_x
                  withFloat:(jfloat)start_y
                  withFloat:(jfloat)end_x
                  withFloat:(jfloat)end_y {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (jfloat)getPositionX {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jfloat)getPositionY {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)getAttributeNamesWithJavaUtilHashSet:(JavaUtilHashSet *)attributes {
}

- (void)positionAttributesWithADView:(ADView *)view
                         withADRectF:(ADRectF *)start
                         withADRectF:(ADRectF *)end
                           withFloat:(jfloat)x
                           withFloat:(jfloat)y
                   withNSStringArray:(IOSObjectArray *)attribute
                      withFloatArray:(IOSFloatArray *)value {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (jboolean)intersectsWithInt:(jint)layoutWidth
                      withInt:(jint)layoutHeight
                  withADRectF:(ADRectF *)start
                  withADRectF:(ADRectF *)end
                    withFloat:(jfloat)x
                    withFloat:(jfloat)y {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x400, 0, 1, -1, -1, -1, -1 },
    { NULL, "F", 0x400, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x400, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 2, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x400, 5, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 7, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivate);
  methods[1].selector = @selector(calcPositionWithInt:withInt:withFloat:withFloat:withFloat:withFloat:);
  methods[2].selector = @selector(getPositionX);
  methods[3].selector = @selector(getPositionY);
  methods[4].selector = @selector(getAttributeNamesWithJavaUtilHashSet:);
  methods[5].selector = @selector(positionAttributesWithADView:withADRectF:withADRectF:withFloat:withFloat:withNSStringArray:withFloatArray:);
  methods[6].selector = @selector(intersectsWithInt:withInt:withADRectF:withADRectF:withFloat:withFloat:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "SELECTION_SLOPE", "F", .constantValue.asFloat = ADXKeyPositionBase_SELECTION_SLOPE, 0x1c, -1, -1, -1, -1 },
    { "mCurveFit_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "calcPosition", "IIFFFF", "getAttributeNames", "LJavaUtilHashSet;", "(Ljava/util/HashSet<Ljava/lang/String;>;)V", "positionAttributes", "LADView;LADRectF;LADRectF;FF[LNSString;[F", "intersects", "IILADRectF;LADRectF;FF" };
  static const J2ObjcClassInfo _ADXKeyPositionBase = { "KeyPositionBase", "androidx.constraintlayout.motion.widget", ptrTable, methods, fields, 7, 0x400, 7, 2, -1, -1, -1, -1, -1 };
  return &_ADXKeyPositionBase;
}

@end

void ADXKeyPositionBase_initPackagePrivate(ADXKeyPositionBase *self) {
  ADXKey_init(self);
  self->mCurveFit_ = JreLoadStatic(ADXKey, UNSET);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXKeyPositionBase)
