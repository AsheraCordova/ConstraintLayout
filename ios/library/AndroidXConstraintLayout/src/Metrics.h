//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\core\Metrics.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Metrics")
#ifdef RESTRICT_Metrics
#define INCLUDE_ALL_Metrics 0
#else
#define INCLUDE_ALL_Metrics 1
#endif
#undef RESTRICT_Metrics

#if !defined (ADXMetrics_) && (INCLUDE_ALL_Metrics || defined(INCLUDE_ADXMetrics))
#define ADXMetrics_

@class JavaLangLong;
@class JavaUtilArrayList;
@class NSString;

/*!
 */
@interface ADXMetrics : NSObject {
 @public
  int64_t measuresWidgetsDuration_;
  int64_t measuresLayoutDuration_;
  int64_t measuredWidgets_;
  int64_t measuredMatchWidgets_;
  int64_t measures_;
  int64_t additionalMeasures_;
  int64_t resolutions_;
  int64_t tableSizeIncrease_;
  int64_t minimize_;
  int64_t constraints_;
  int64_t simpleconstraints_;
  int64_t optimize_;
  int64_t iterations_;
  int64_t pivots_;
  int64_t bfs_;
  int64_t variables_;
  int64_t errors_;
  int64_t slackvariables_;
  int64_t extravariables_;
  int64_t maxTableSize_;
  int64_t fullySolved_;
  int64_t graphOptimizer_;
  int64_t graphSolved_;
  int64_t linearSolved_;
  int64_t resolvedWidgets_;
  int64_t minimizeGoal_;
  int64_t maxVariables_;
  int64_t maxRows_;
  int64_t centerConnectionResolved_;
  int64_t matchConnectionResolved_;
  int64_t chainConnectionResolved_;
  int64_t barrierConnectionResolved_;
  int64_t oldresolvedWidgets_;
  int64_t nonresolvedWidgets_;
  JavaUtilArrayList *problematicLayouts_;
  int64_t lastTableSize_;
  int64_t widgets_;
  int64_t measuresWrap_;
  int64_t measuresWrapInfeasible_;
  int64_t infeasibleDetermineGroups_;
  int64_t determineGroups_;
  int64_t layouts_;
  int64_t grouping_;
}

#pragma mark Public

- (instancetype)init;

- (void)reset;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXMetrics)

J2OBJC_FIELD_SETTER(ADXMetrics, problematicLayouts_, JavaUtilArrayList *)

FOUNDATION_EXPORT void ADXMetrics_init(ADXMetrics *self);

FOUNDATION_EXPORT ADXMetrics *new_ADXMetrics_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXMetrics *create_ADXMetrics_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADXMetrics)

@compatibility_alias AndroidxConstraintlayoutCoreMetrics ADXMetrics;


#endif

#pragma pop_macro("INCLUDE_ALL_Metrics")
