//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\motion\utils\ViewTimeCycle.java
//

#define J2OBJC_IMPORTED_BY_JAVA_IMPLEMENTATION 1




#include "ConstraintAttribute.h"
#include "CurveFit.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "Key.h"
#include "KeyCache.h"
#include "Log.h"
#include "MotionLayout.h"
#include "SparseArray.h"
#include "TimeCycleSplineSet.h"
#include "View.h"
#include "ViewTimeCycle.h"
#include "java/lang/Boolean.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/lang/NoSuchMethodException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/reflect/InvocationTargetException.h"
#include "java/lang/reflect/Method.h"


@class NSString;


#pragma clang diagnostic error "-Wreturn-type"
#pragma clang diagnostic ignored "-Wswitch"


inline NSString *ADXViewTimeCycle_get_TAG(void);
static NSString *ADXViewTimeCycle_TAG = @"ViewTimeCycle";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXViewTimeCycle, TAG, NSString *)

@implementation ADXViewTimeCycle

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXViewTimeCycle_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (bool)setPropertyWithADView:(ADView *)view
                    withFloat:(float)t
                     withLong:(int64_t)time
              withADXKeyCache:(ADXKeyCache *)cache {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (float)getWithFloat:(float)pos
             withLong:(int64_t)time
           withADView:(ADView *)view
      withADXKeyCache:(ADXKeyCache *)cache {
  [((ADXCurveFit *) nil_chk(mCurveFit_)) getPosWithDouble:pos withFloatArray:mCache_];
  float period = IOSFloatArray_Get(nil_chk(mCache_), ADXTimeCycleSplineSet_CURVE_PERIOD);
  if (period == 0) {
    mContinue_ = false;
    return IOSFloatArray_Get(mCache_, ADXTimeCycleSplineSet_CURVE_OFFSET);
  }
  if (JavaLangFloat_isNaNWithFloat_(last_cycle_)) {
    last_cycle_ = [((ADXKeyCache *) nil_chk(cache)) getFloatValueWithId:view withNSString:mType_ withInt:0];
    if (JavaLangFloat_isNaNWithFloat_(last_cycle_)) {
      last_cycle_ = 0;
    }
  }
  int64_t delta_time = time - last_time_;
  last_cycle_ = (float) (fmod((last_cycle_ + delta_time * 1E-9 * period), 1.0));
  [((ADXKeyCache *) nil_chk(cache)) setFloatValueWithId:view withNSString:mType_ withInt:0 withFloat:last_cycle_];
  last_time_ = time;
  float v = IOSFloatArray_Get(nil_chk(mCache_), ADXTimeCycleSplineSet_CURVE_VALUE);
  float wave = [self calcWaveWithFloat:last_cycle_];
  float offset = IOSFloatArray_Get(nil_chk(mCache_), ADXTimeCycleSplineSet_CURVE_OFFSET);
  float value = v * wave + offset;
  mContinue_ = (v != 0.0f || period != 0.0f);
  return value;
}

+ (ADXViewTimeCycle *)makeCustomSplineWithNSString:(NSString *)str
                                 withADSparseArray:(ADSparseArray *)attrList {
  return ADXViewTimeCycle_makeCustomSplineWithNSString_withADSparseArray_(str, attrList);
}

+ (ADXViewTimeCycle *)makeSplineWithNSString:(NSString *)str
                                    withLong:(int64_t)currentTime {
  return ADXViewTimeCycle_makeSplineWithNSString_withLong_(str, currentTime);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LADXViewTimeCycle;", 0x9, 4, 5, -1, 6, -1, -1 },
    { NULL, "LADXViewTimeCycle;", 0x9, 7, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setPropertyWithADView:withFloat:withLong:withADXKeyCache:);
  methods[2].selector = @selector(getWithFloat:withLong:withADView:withADXKeyCache:);
  methods[3].selector = @selector(makeCustomSplineWithNSString:withADSparseArray:);
  methods[4].selector = @selector(makeSplineWithNSString:withLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TAG", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 9, -1, -1 },
  };
  static const void *ptrTable[] = { "setProperty", "LADView;FJLADXKeyCache;", "get", "FJLADView;LADXKeyCache;", "makeCustomSpline", "LNSString;LADSparseArray;", "(Ljava/lang/String;Lr/android/util/SparseArray<Landroidx/constraintlayout/widget/ConstraintAttribute;>;)Landroidx/constraintlayout/motion/utils/ViewTimeCycle;", "makeSpline", "LNSString;J", &ADXViewTimeCycle_TAG, "LADXViewTimeCycle_ElevationSet;LADXViewTimeCycle_AlphaSet;LADXViewTimeCycle_RotationSet;LADXViewTimeCycle_RotationXset;LADXViewTimeCycle_RotationYset;LADXViewTimeCycle_PathRotate;LADXViewTimeCycle_ScaleXset;LADXViewTimeCycle_ScaleYset;LADXViewTimeCycle_TranslationXset;LADXViewTimeCycle_TranslationYset;LADXViewTimeCycle_TranslationZset;LADXViewTimeCycle_CustomSet;LADXViewTimeCycle_ProgressSet;" };
  static const J2ObjcClassInfo _ADXViewTimeCycle = { "ViewTimeCycle", "androidx.constraintlayout.motion.utils", ptrTable, methods, fields, 7, 0x401, 5, 1, -1, 10, -1, -1, -1 };
  return &_ADXViewTimeCycle;
}

@end

void ADXViewTimeCycle_init(ADXViewTimeCycle *self) {
  ADXTimeCycleSplineSet_init(self);
}

ADXViewTimeCycle *ADXViewTimeCycle_makeCustomSplineWithNSString_withADSparseArray_(NSString *str, ADSparseArray *attrList) {
  ADXViewTimeCycle_initialize();
  return create_ADXViewTimeCycle_CustomSet_initWithNSString_withADSparseArray_(str, attrList);
}

ADXViewTimeCycle *ADXViewTimeCycle_makeSplineWithNSString_withLong_(NSString *str, int64_t currentTime) {
  ADXViewTimeCycle_initialize();
  ADXViewTimeCycle *timeCycle;
  switch (JreIndexOfStr(str, (id[]){ ADXKey_ALPHA, ADXKey_ELEVATION, ADXKey_ROTATION, ADXKey_ROTATION_X, ADXKey_ROTATION_Y, ADXKey_TRANSITION_PATH_ROTATE, ADXKey_SCALE_X, ADXKey_SCALE_Y, ADXKey_TRANSLATION_X, ADXKey_TRANSLATION_Y, ADXKey_TRANSLATION_Z, ADXKey_PROGRESS }, 12)) {
    case 0:
    timeCycle = create_ADXViewTimeCycle_AlphaSet_init();
    break;
    case 1:
    timeCycle = create_ADXViewTimeCycle_ElevationSet_init();
    break;
    case 2:
    timeCycle = create_ADXViewTimeCycle_RotationSet_init();
    break;
    case 3:
    timeCycle = create_ADXViewTimeCycle_RotationXset_init();
    break;
    case 4:
    timeCycle = create_ADXViewTimeCycle_RotationYset_init();
    break;
    case 5:
    timeCycle = create_ADXViewTimeCycle_PathRotate_init();
    break;
    case 6:
    timeCycle = create_ADXViewTimeCycle_ScaleXset_init();
    break;
    case 7:
    timeCycle = create_ADXViewTimeCycle_ScaleYset_init();
    break;
    case 8:
    timeCycle = create_ADXViewTimeCycle_TranslationXset_init();
    break;
    case 9:
    timeCycle = create_ADXViewTimeCycle_TranslationYset_init();
    break;
    case 10:
    timeCycle = create_ADXViewTimeCycle_TranslationZset_init();
    break;
    case 11:
    timeCycle = create_ADXViewTimeCycle_ProgressSet_init();
    break;
    default:
    return nil;
  }
  [((ADXViewTimeCycle *) nil_chk(timeCycle)) setStartTimeWithLong:currentTime];
  return timeCycle;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXViewTimeCycle)

J2OBJC_NAME_MAPPING(ADXViewTimeCycle, "androidx.constraintlayout.motion.utils", "ADX")

@implementation ADXViewTimeCycle_ElevationSet

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXViewTimeCycle_ElevationSet_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (bool)setPropertyWithADView:(ADView *)view
                    withFloat:(float)t
                     withLong:(int64_t)time
              withADXKeyCache:(ADXKeyCache *)cache {
  {
    [((ADView *) nil_chk(view)) setElevationWithFloat:[self getWithFloat:t withLong:time withADView:view withADXKeyCache:cache]];
  }
  return mContinue_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setPropertyWithADView:withFloat:withLong:withADXKeyCache:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "setProperty", "LADView;FJLADXKeyCache;", "LADXViewTimeCycle;" };
  static const J2ObjcClassInfo _ADXViewTimeCycle_ElevationSet = { "ElevationSet", "androidx.constraintlayout.motion.utils", ptrTable, methods, NULL, 7, 0x8, 2, 0, 2, -1, -1, -1, -1 };
  return &_ADXViewTimeCycle_ElevationSet;
}

@end

void ADXViewTimeCycle_ElevationSet_init(ADXViewTimeCycle_ElevationSet *self) {
  ADXViewTimeCycle_init(self);
}

ADXViewTimeCycle_ElevationSet *new_ADXViewTimeCycle_ElevationSet_init() {
  J2OBJC_NEW_IMPL(ADXViewTimeCycle_ElevationSet, init)
}

ADXViewTimeCycle_ElevationSet *create_ADXViewTimeCycle_ElevationSet_init() {
  J2OBJC_CREATE_IMPL(ADXViewTimeCycle_ElevationSet, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXViewTimeCycle_ElevationSet)

@implementation ADXViewTimeCycle_AlphaSet

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXViewTimeCycle_AlphaSet_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (bool)setPropertyWithADView:(ADView *)view
                    withFloat:(float)t
                     withLong:(int64_t)time
              withADXKeyCache:(ADXKeyCache *)cache {
  [((ADView *) nil_chk(view)) setAlphaWithFloat:[self getWithFloat:t withLong:time withADView:view withADXKeyCache:cache]];
  return mContinue_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setPropertyWithADView:withFloat:withLong:withADXKeyCache:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "setProperty", "LADView;FJLADXKeyCache;", "LADXViewTimeCycle;" };
  static const J2ObjcClassInfo _ADXViewTimeCycle_AlphaSet = { "AlphaSet", "androidx.constraintlayout.motion.utils", ptrTable, methods, NULL, 7, 0x8, 2, 0, 2, -1, -1, -1, -1 };
  return &_ADXViewTimeCycle_AlphaSet;
}

@end

void ADXViewTimeCycle_AlphaSet_init(ADXViewTimeCycle_AlphaSet *self) {
  ADXViewTimeCycle_init(self);
}

ADXViewTimeCycle_AlphaSet *new_ADXViewTimeCycle_AlphaSet_init() {
  J2OBJC_NEW_IMPL(ADXViewTimeCycle_AlphaSet, init)
}

ADXViewTimeCycle_AlphaSet *create_ADXViewTimeCycle_AlphaSet_init() {
  J2OBJC_CREATE_IMPL(ADXViewTimeCycle_AlphaSet, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXViewTimeCycle_AlphaSet)

@implementation ADXViewTimeCycle_RotationSet

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXViewTimeCycle_RotationSet_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (bool)setPropertyWithADView:(ADView *)view
                    withFloat:(float)t
                     withLong:(int64_t)time
              withADXKeyCache:(ADXKeyCache *)cache {
  [((ADView *) nil_chk(view)) setRotationWithFloat:[self getWithFloat:t withLong:time withADView:view withADXKeyCache:cache]];
  return mContinue_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setPropertyWithADView:withFloat:withLong:withADXKeyCache:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "setProperty", "LADView;FJLADXKeyCache;", "LADXViewTimeCycle;" };
  static const J2ObjcClassInfo _ADXViewTimeCycle_RotationSet = { "RotationSet", "androidx.constraintlayout.motion.utils", ptrTable, methods, NULL, 7, 0x8, 2, 0, 2, -1, -1, -1, -1 };
  return &_ADXViewTimeCycle_RotationSet;
}

@end

void ADXViewTimeCycle_RotationSet_init(ADXViewTimeCycle_RotationSet *self) {
  ADXViewTimeCycle_init(self);
}

ADXViewTimeCycle_RotationSet *new_ADXViewTimeCycle_RotationSet_init() {
  J2OBJC_NEW_IMPL(ADXViewTimeCycle_RotationSet, init)
}

ADXViewTimeCycle_RotationSet *create_ADXViewTimeCycle_RotationSet_init() {
  J2OBJC_CREATE_IMPL(ADXViewTimeCycle_RotationSet, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXViewTimeCycle_RotationSet)

@implementation ADXViewTimeCycle_RotationXset

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXViewTimeCycle_RotationXset_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (bool)setPropertyWithADView:(ADView *)view
                    withFloat:(float)t
                     withLong:(int64_t)time
              withADXKeyCache:(ADXKeyCache *)cache {
  [((ADView *) nil_chk(view)) setRotationXWithFloat:[self getWithFloat:t withLong:time withADView:view withADXKeyCache:cache]];
  return mContinue_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setPropertyWithADView:withFloat:withLong:withADXKeyCache:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "setProperty", "LADView;FJLADXKeyCache;", "LADXViewTimeCycle;" };
  static const J2ObjcClassInfo _ADXViewTimeCycle_RotationXset = { "RotationXset", "androidx.constraintlayout.motion.utils", ptrTable, methods, NULL, 7, 0x8, 2, 0, 2, -1, -1, -1, -1 };
  return &_ADXViewTimeCycle_RotationXset;
}

@end

void ADXViewTimeCycle_RotationXset_init(ADXViewTimeCycle_RotationXset *self) {
  ADXViewTimeCycle_init(self);
}

ADXViewTimeCycle_RotationXset *new_ADXViewTimeCycle_RotationXset_init() {
  J2OBJC_NEW_IMPL(ADXViewTimeCycle_RotationXset, init)
}

ADXViewTimeCycle_RotationXset *create_ADXViewTimeCycle_RotationXset_init() {
  J2OBJC_CREATE_IMPL(ADXViewTimeCycle_RotationXset, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXViewTimeCycle_RotationXset)

@implementation ADXViewTimeCycle_RotationYset

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXViewTimeCycle_RotationYset_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (bool)setPropertyWithADView:(ADView *)view
                    withFloat:(float)t
                     withLong:(int64_t)time
              withADXKeyCache:(ADXKeyCache *)cache {
  [((ADView *) nil_chk(view)) setRotationYWithFloat:[self getWithFloat:t withLong:time withADView:view withADXKeyCache:cache]];
  return mContinue_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setPropertyWithADView:withFloat:withLong:withADXKeyCache:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "setProperty", "LADView;FJLADXKeyCache;", "LADXViewTimeCycle;" };
  static const J2ObjcClassInfo _ADXViewTimeCycle_RotationYset = { "RotationYset", "androidx.constraintlayout.motion.utils", ptrTable, methods, NULL, 7, 0x8, 2, 0, 2, -1, -1, -1, -1 };
  return &_ADXViewTimeCycle_RotationYset;
}

@end

void ADXViewTimeCycle_RotationYset_init(ADXViewTimeCycle_RotationYset *self) {
  ADXViewTimeCycle_init(self);
}

ADXViewTimeCycle_RotationYset *new_ADXViewTimeCycle_RotationYset_init() {
  J2OBJC_NEW_IMPL(ADXViewTimeCycle_RotationYset, init)
}

ADXViewTimeCycle_RotationYset *create_ADXViewTimeCycle_RotationYset_init() {
  J2OBJC_CREATE_IMPL(ADXViewTimeCycle_RotationYset, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXViewTimeCycle_RotationYset)

@implementation ADXViewTimeCycle_PathRotate

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXViewTimeCycle_PathRotate_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (bool)setPropertyWithADView:(ADView *)view
                    withFloat:(float)t
                     withLong:(int64_t)time
              withADXKeyCache:(ADXKeyCache *)cache {
  return mContinue_;
}

- (bool)setPathRotateWithADView:(ADView *)view
                withADXKeyCache:(ADXKeyCache *)cache
                      withFloat:(float)t
                       withLong:(int64_t)time
                     withDouble:(double)dx
                     withDouble:(double)dy {
  [((ADView *) nil_chk(view)) setRotationWithFloat:[self getWithFloat:t withLong:time withADView:view withADXKeyCache:cache] + (float) JavaLangMath_toDegreesWithDouble_(JavaLangMath_atan2WithDouble_withDouble_(dy, dx))];
  return mContinue_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setPropertyWithADView:withFloat:withLong:withADXKeyCache:);
  methods[2].selector = @selector(setPathRotateWithADView:withADXKeyCache:withFloat:withLong:withDouble:withDouble:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "setProperty", "LADView;FJLADXKeyCache;", "setPathRotate", "LADView;LADXKeyCache;FJDD", "LADXViewTimeCycle;" };
  static const J2ObjcClassInfo _ADXViewTimeCycle_PathRotate = { "PathRotate", "androidx.constraintlayout.motion.utils", ptrTable, methods, NULL, 7, 0x9, 3, 0, 4, -1, -1, -1, -1 };
  return &_ADXViewTimeCycle_PathRotate;
}

@end

void ADXViewTimeCycle_PathRotate_init(ADXViewTimeCycle_PathRotate *self) {
  ADXViewTimeCycle_init(self);
}

ADXViewTimeCycle_PathRotate *new_ADXViewTimeCycle_PathRotate_init() {
  J2OBJC_NEW_IMPL(ADXViewTimeCycle_PathRotate, init)
}

ADXViewTimeCycle_PathRotate *create_ADXViewTimeCycle_PathRotate_init() {
  J2OBJC_CREATE_IMPL(ADXViewTimeCycle_PathRotate, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXViewTimeCycle_PathRotate)

@implementation ADXViewTimeCycle_ScaleXset

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXViewTimeCycle_ScaleXset_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (bool)setPropertyWithADView:(ADView *)view
                    withFloat:(float)t
                     withLong:(int64_t)time
              withADXKeyCache:(ADXKeyCache *)cache {
  [((ADView *) nil_chk(view)) setScaleXWithFloat:[self getWithFloat:t withLong:time withADView:view withADXKeyCache:cache]];
  return mContinue_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setPropertyWithADView:withFloat:withLong:withADXKeyCache:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "setProperty", "LADView;FJLADXKeyCache;", "LADXViewTimeCycle;" };
  static const J2ObjcClassInfo _ADXViewTimeCycle_ScaleXset = { "ScaleXset", "androidx.constraintlayout.motion.utils", ptrTable, methods, NULL, 7, 0x8, 2, 0, 2, -1, -1, -1, -1 };
  return &_ADXViewTimeCycle_ScaleXset;
}

@end

void ADXViewTimeCycle_ScaleXset_init(ADXViewTimeCycle_ScaleXset *self) {
  ADXViewTimeCycle_init(self);
}

ADXViewTimeCycle_ScaleXset *new_ADXViewTimeCycle_ScaleXset_init() {
  J2OBJC_NEW_IMPL(ADXViewTimeCycle_ScaleXset, init)
}

ADXViewTimeCycle_ScaleXset *create_ADXViewTimeCycle_ScaleXset_init() {
  J2OBJC_CREATE_IMPL(ADXViewTimeCycle_ScaleXset, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXViewTimeCycle_ScaleXset)

@implementation ADXViewTimeCycle_ScaleYset

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXViewTimeCycle_ScaleYset_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (bool)setPropertyWithADView:(ADView *)view
                    withFloat:(float)t
                     withLong:(int64_t)time
              withADXKeyCache:(ADXKeyCache *)cache {
  [((ADView *) nil_chk(view)) setScaleYWithFloat:[self getWithFloat:t withLong:time withADView:view withADXKeyCache:cache]];
  return mContinue_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setPropertyWithADView:withFloat:withLong:withADXKeyCache:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "setProperty", "LADView;FJLADXKeyCache;", "LADXViewTimeCycle;" };
  static const J2ObjcClassInfo _ADXViewTimeCycle_ScaleYset = { "ScaleYset", "androidx.constraintlayout.motion.utils", ptrTable, methods, NULL, 7, 0x8, 2, 0, 2, -1, -1, -1, -1 };
  return &_ADXViewTimeCycle_ScaleYset;
}

@end

void ADXViewTimeCycle_ScaleYset_init(ADXViewTimeCycle_ScaleYset *self) {
  ADXViewTimeCycle_init(self);
}

ADXViewTimeCycle_ScaleYset *new_ADXViewTimeCycle_ScaleYset_init() {
  J2OBJC_NEW_IMPL(ADXViewTimeCycle_ScaleYset, init)
}

ADXViewTimeCycle_ScaleYset *create_ADXViewTimeCycle_ScaleYset_init() {
  J2OBJC_CREATE_IMPL(ADXViewTimeCycle_ScaleYset, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXViewTimeCycle_ScaleYset)

@implementation ADXViewTimeCycle_TranslationXset

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXViewTimeCycle_TranslationXset_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (bool)setPropertyWithADView:(ADView *)view
                    withFloat:(float)t
                     withLong:(int64_t)time
              withADXKeyCache:(ADXKeyCache *)cache {
  [((ADView *) nil_chk(view)) setTranslationXWithFloat:[self getWithFloat:t withLong:time withADView:view withADXKeyCache:cache]];
  return mContinue_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setPropertyWithADView:withFloat:withLong:withADXKeyCache:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "setProperty", "LADView;FJLADXKeyCache;", "LADXViewTimeCycle;" };
  static const J2ObjcClassInfo _ADXViewTimeCycle_TranslationXset = { "TranslationXset", "androidx.constraintlayout.motion.utils", ptrTable, methods, NULL, 7, 0x8, 2, 0, 2, -1, -1, -1, -1 };
  return &_ADXViewTimeCycle_TranslationXset;
}

@end

void ADXViewTimeCycle_TranslationXset_init(ADXViewTimeCycle_TranslationXset *self) {
  ADXViewTimeCycle_init(self);
}

ADXViewTimeCycle_TranslationXset *new_ADXViewTimeCycle_TranslationXset_init() {
  J2OBJC_NEW_IMPL(ADXViewTimeCycle_TranslationXset, init)
}

ADXViewTimeCycle_TranslationXset *create_ADXViewTimeCycle_TranslationXset_init() {
  J2OBJC_CREATE_IMPL(ADXViewTimeCycle_TranslationXset, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXViewTimeCycle_TranslationXset)

@implementation ADXViewTimeCycle_TranslationYset

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXViewTimeCycle_TranslationYset_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (bool)setPropertyWithADView:(ADView *)view
                    withFloat:(float)t
                     withLong:(int64_t)time
              withADXKeyCache:(ADXKeyCache *)cache {
  [((ADView *) nil_chk(view)) setTranslationYWithFloat:[self getWithFloat:t withLong:time withADView:view withADXKeyCache:cache]];
  return mContinue_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setPropertyWithADView:withFloat:withLong:withADXKeyCache:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "setProperty", "LADView;FJLADXKeyCache;", "LADXViewTimeCycle;" };
  static const J2ObjcClassInfo _ADXViewTimeCycle_TranslationYset = { "TranslationYset", "androidx.constraintlayout.motion.utils", ptrTable, methods, NULL, 7, 0x8, 2, 0, 2, -1, -1, -1, -1 };
  return &_ADXViewTimeCycle_TranslationYset;
}

@end

void ADXViewTimeCycle_TranslationYset_init(ADXViewTimeCycle_TranslationYset *self) {
  ADXViewTimeCycle_init(self);
}

ADXViewTimeCycle_TranslationYset *new_ADXViewTimeCycle_TranslationYset_init() {
  J2OBJC_NEW_IMPL(ADXViewTimeCycle_TranslationYset, init)
}

ADXViewTimeCycle_TranslationYset *create_ADXViewTimeCycle_TranslationYset_init() {
  J2OBJC_CREATE_IMPL(ADXViewTimeCycle_TranslationYset, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXViewTimeCycle_TranslationYset)

@implementation ADXViewTimeCycle_TranslationZset

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXViewTimeCycle_TranslationZset_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (bool)setPropertyWithADView:(ADView *)view
                    withFloat:(float)t
                     withLong:(int64_t)time
              withADXKeyCache:(ADXKeyCache *)cache {
  {
    [((ADView *) nil_chk(view)) setTranslationZWithFloat:[self getWithFloat:t withLong:time withADView:view withADXKeyCache:cache]];
  }
  return mContinue_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setPropertyWithADView:withFloat:withLong:withADXKeyCache:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "setProperty", "LADView;FJLADXKeyCache;", "LADXViewTimeCycle;" };
  static const J2ObjcClassInfo _ADXViewTimeCycle_TranslationZset = { "TranslationZset", "androidx.constraintlayout.motion.utils", ptrTable, methods, NULL, 7, 0x8, 2, 0, 2, -1, -1, -1, -1 };
  return &_ADXViewTimeCycle_TranslationZset;
}

@end

void ADXViewTimeCycle_TranslationZset_init(ADXViewTimeCycle_TranslationZset *self) {
  ADXViewTimeCycle_init(self);
}

ADXViewTimeCycle_TranslationZset *new_ADXViewTimeCycle_TranslationZset_init() {
  J2OBJC_NEW_IMPL(ADXViewTimeCycle_TranslationZset, init)
}

ADXViewTimeCycle_TranslationZset *create_ADXViewTimeCycle_TranslationZset_init() {
  J2OBJC_CREATE_IMPL(ADXViewTimeCycle_TranslationZset, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXViewTimeCycle_TranslationZset)

@implementation ADXViewTimeCycle_CustomSet

- (instancetype)initWithNSString:(NSString *)attribute
               withADSparseArray:(ADSparseArray *)attrList {
  ADXViewTimeCycle_CustomSet_initWithNSString_withADSparseArray_(self, attribute, attrList);
  return self;
}

- (void)setupWithInt:(int32_t)curveType {
  int32_t size = [((ADSparseArray *) nil_chk(mConstraintAttributeList_)) size];
  int32_t dimensionality = [((ADXConstraintAttribute *) nil_chk([((ADSparseArray *) nil_chk(mConstraintAttributeList_)) valueAtWithInt:0])) numberOfInterpolatedValues];
  IOSDoubleArray *time = [IOSDoubleArray arrayWithLength:size];
  JreStrongAssignAndConsume(&mTempValues_, [IOSFloatArray newArrayWithLength:dimensionality + 2]);
  JreStrongAssignAndConsume(&mCache_CustomSet_, [IOSFloatArray newArrayWithLength:dimensionality]);
  IOSObjectArray *values = [IOSDoubleArray arrayWithDimensions:2 lengths:(int32_t[]){ size, dimensionality + 2 }];
  for (int32_t i = 0; i < size; i++) {
    int32_t key = [((ADSparseArray *) nil_chk(mConstraintAttributeList_)) keyAtWithInt:i];
    ADXConstraintAttribute *ca = JreRetainedLocalValue([((ADSparseArray *) nil_chk(mConstraintAttributeList_)) valueAtWithInt:i]);
    IOSFloatArray *waveProp = [((ADSparseArray *) nil_chk(mWaveProperties_)) valueAtWithInt:i];
    *IOSDoubleArray_GetRef(time, i) = key * 1E-2;
    [((ADXConstraintAttribute *) nil_chk(ca)) getValuesToInterpolateWithFloatArray:mTempValues_];
    for (int32_t k = 0; k < ((IOSFloatArray *) nil_chk(mTempValues_))->size_; k++) {
      *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(values, i)), k) = IOSFloatArray_Get(mTempValues_, k);
    }
    *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(values, i)), dimensionality) = IOSFloatArray_Get(nil_chk(waveProp), 0);
    *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(values, i)), dimensionality + 1) = IOSFloatArray_Get(waveProp, 1);
  }
  JreStrongAssign(&mCurveFit_, ADXCurveFit_getWithInt_withDoubleArray_withDoubleArray2_(curveType, time, values));
}

- (void)setPointWithInt:(int32_t)position
              withFloat:(float)value
              withFloat:(float)period
                withInt:(int32_t)shape
              withFloat:(float)offset {
  @throw create_JavaLangRuntimeException_initWithNSString_(@"don't call for custom attribute call setPoint(pos, ConstraintAttribute,...)");
}

- (void)setPointWithInt:(int32_t)position
withADXConstraintAttribute:(ADXConstraintAttribute *)value
              withFloat:(float)period
                withInt:(int32_t)shape
              withFloat:(float)offset {
  [((ADSparseArray *) nil_chk(mConstraintAttributeList_)) appendWithInt:position withId:value];
  [((ADSparseArray *) nil_chk(mWaveProperties_)) appendWithInt:position withId:[IOSFloatArray arrayWithFloats:(float[]){ period, offset } count:2]];
  mWaveShape_ = JavaLangMath_maxWithInt_withInt_(mWaveShape_, shape);
}

- (bool)setPropertyWithADView:(ADView *)view
                    withFloat:(float)t
                     withLong:(int64_t)time
              withADXKeyCache:(ADXKeyCache *)cache {
  [((ADXCurveFit *) nil_chk(mCurveFit_)) getPosWithDouble:t withFloatArray:mTempValues_];
  float period = IOSFloatArray_Get(mTempValues_, ((IOSFloatArray *) nil_chk(mTempValues_))->size_ - 2);
  float offset = IOSFloatArray_Get(mTempValues_, mTempValues_->size_ - 1);
  int64_t delta_time = time - last_time_;
  if (JavaLangFloat_isNaNWithFloat_(last_cycle_)) {
    last_cycle_ = [((ADXKeyCache *) nil_chk(cache)) getFloatValueWithId:view withNSString:mAttributeName_ withInt:0];
    if (JavaLangFloat_isNaNWithFloat_(last_cycle_)) {
      last_cycle_ = 0;
    }
  }
  last_cycle_ = (float) (fmod((last_cycle_ + delta_time * 1E-9 * period), 1.0));
  last_time_ = time;
  float wave = [self calcWaveWithFloat:last_cycle_];
  mContinue_ = false;
  for (int32_t i = 0; i < ((IOSFloatArray *) nil_chk(mCache_CustomSet_))->size_; i++) {
    mContinue_ |= (IOSFloatArray_Get(nil_chk(mTempValues_), i) != 0.0);
    *IOSFloatArray_GetRef(mCache_CustomSet_, i) = IOSFloatArray_Get(mTempValues_, i) * wave + offset;
  }
  [((ADXConstraintAttribute *) nil_chk([((ADSparseArray *) nil_chk(mConstraintAttributeList_)) valueAtWithInt:0])) setInterpolatedValueWithADView:view withFloatArray:mCache_CustomSet_];
  if (period != 0.0f) {
    mContinue_ = true;
  }
  return mContinue_;
}

- (void)dealloc {
  RELEASE_(mAttributeName_);
  RELEASE_(mConstraintAttributeList_);
  RELEASE_(mWaveProperties_);
  RELEASE_(mTempValues_);
  RELEASE_(mCache_CustomSet_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withADSparseArray:);
  methods[1].selector = @selector(setupWithInt:);
  methods[2].selector = @selector(setPointWithInt:withFloat:withFloat:withInt:withFloat:);
  methods[3].selector = @selector(setPointWithInt:withADXConstraintAttribute:withFloat:withInt:withFloat:);
  methods[4].selector = @selector(setPropertyWithADView:withFloat:withLong:withADXKeyCache:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mAttributeName_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mConstraintAttributeList_", "LADSparseArray;", .constantValue.asLong = 0, 0x0, -1, -1, 9, -1 },
    { "mWaveProperties_", "LADSparseArray;", .constantValue.asLong = 0, 0x0, -1, -1, 10, -1 },
    { "mTempValues_", "[F", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mCache_CustomSet_", "[F", .constantValue.asLong = 0, 0x0, 11, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LADSparseArray;", "(Ljava/lang/String;Lr/android/util/SparseArray<Landroidx/constraintlayout/widget/ConstraintAttribute;>;)V", "setup", "I", "setPoint", "IFFIF", "ILADXConstraintAttribute;FIF", "setProperty", "LADView;FJLADXKeyCache;", "Lr/android/util/SparseArray<Landroidx/constraintlayout/widget/ConstraintAttribute;>;", "Lr/android/util/SparseArray<[F>;", "mCache", "LADXViewTimeCycle;" };
  static const J2ObjcClassInfo _ADXViewTimeCycle_CustomSet = { "CustomSet", "androidx.constraintlayout.motion.utils", ptrTable, methods, fields, 7, 0x9, 5, 5, 12, -1, -1, -1, -1 };
  return &_ADXViewTimeCycle_CustomSet;
}

@end

void ADXViewTimeCycle_CustomSet_initWithNSString_withADSparseArray_(ADXViewTimeCycle_CustomSet *self, NSString *attribute, ADSparseArray *attrList) {
  ADXViewTimeCycle_init(self);
  JreStrongAssignAndConsume(&self->mWaveProperties_, new_ADSparseArray_init());
  JreStrongAssign(&self->mAttributeName_, IOSObjectArray_Get(nil_chk([((NSString *) nil_chk(attribute)) java_split:@","]), 1));
  JreStrongAssign(&self->mConstraintAttributeList_, attrList);
}

ADXViewTimeCycle_CustomSet *new_ADXViewTimeCycle_CustomSet_initWithNSString_withADSparseArray_(NSString *attribute, ADSparseArray *attrList) {
  J2OBJC_NEW_IMPL(ADXViewTimeCycle_CustomSet, initWithNSString_withADSparseArray_, attribute, attrList)
}

ADXViewTimeCycle_CustomSet *create_ADXViewTimeCycle_CustomSet_initWithNSString_withADSparseArray_(NSString *attribute, ADSparseArray *attrList) {
  J2OBJC_CREATE_IMPL(ADXViewTimeCycle_CustomSet, initWithNSString_withADSparseArray_, attribute, attrList)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXViewTimeCycle_CustomSet)

@implementation ADXViewTimeCycle_ProgressSet

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXViewTimeCycle_ProgressSet_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (bool)setPropertyWithADView:(ADView *)view
                    withFloat:(float)t
                     withLong:(int64_t)time
              withADXKeyCache:(ADXKeyCache *)cache {
  if ([view isKindOfClass:[ADXMotionLayout class]]) {
    [((ADXMotionLayout *) nil_chk(((ADXMotionLayout *) view))) setProgressWithFloat:[self getWithFloat:t withLong:time withADView:view withADXKeyCache:cache]];
  }
  else {
    if (mNoMethod_) {
      return false;
    }
    JavaLangReflectMethod *method = nil;
    @try {
      method = [[((ADView *) nil_chk(view)) java_getClass] getMethod:@"setProgress" parameterTypes:[IOSObjectArray arrayWithObjects:(id[]){ JreLoadStatic(JavaLangFloat, TYPE) } count:1 type:IOSClass_class_()]];
    }
    @catch (JavaLangNoSuchMethodException *e) {
      mNoMethod_ = true;
    }
    if (method != nil) {
      @try {
        [method invokeWithId:view withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangFloat_valueOfWithFloat_([self getWithFloat:t withLong:time withADView:view withADXKeyCache:cache]) } count:1 type:NSObject_class_()]];
      }
      @catch (JavaLangIllegalAccessException *e) {
        ADLog_eWithNSString_withNSString_withJavaLangThrowable_(ADXViewTimeCycle_TAG, @"unable to setProgress", e);
      }
      @catch (JavaLangReflectInvocationTargetException *e) {
        ADLog_eWithNSString_withNSString_withJavaLangThrowable_(ADXViewTimeCycle_TAG, @"unable to setProgress", e);
      }
    }
  }
  return mContinue_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setPropertyWithADView:withFloat:withLong:withADXKeyCache:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mNoMethod_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setProperty", "LADView;FJLADXKeyCache;", "LADXViewTimeCycle;" };
  static const J2ObjcClassInfo _ADXViewTimeCycle_ProgressSet = { "ProgressSet", "androidx.constraintlayout.motion.utils", ptrTable, methods, fields, 7, 0x8, 2, 1, 2, -1, -1, -1, -1 };
  return &_ADXViewTimeCycle_ProgressSet;
}

@end

void ADXViewTimeCycle_ProgressSet_init(ADXViewTimeCycle_ProgressSet *self) {
  ADXViewTimeCycle_init(self);
  self->mNoMethod_ = false;
}

ADXViewTimeCycle_ProgressSet *new_ADXViewTimeCycle_ProgressSet_init() {
  J2OBJC_NEW_IMPL(ADXViewTimeCycle_ProgressSet, init)
}

ADXViewTimeCycle_ProgressSet *create_ADXViewTimeCycle_ProgressSet_init() {
  J2OBJC_CREATE_IMPL(ADXViewTimeCycle_ProgressSet, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXViewTimeCycle_ProgressSet)
