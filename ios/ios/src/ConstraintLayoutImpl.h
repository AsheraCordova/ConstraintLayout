//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-ios-widgets\IOSAndroidXConstraintLayoutPlugin\src\main\java\com\ashera\constraintlayout\ConstraintLayoutImpl.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ConstraintLayoutImpl")
#ifdef RESTRICT_ConstraintLayoutImpl
#define INCLUDE_ALL_ConstraintLayoutImpl 0
#else
#define INCLUDE_ALL_ConstraintLayoutImpl 1
#endif
#undef RESTRICT_ConstraintLayoutImpl

#if !defined (ASConstraintLayoutImpl_) && (INCLUDE_ALL_ConstraintLayoutImpl || defined(INCLUDE_ASConstraintLayoutImpl))
#define ASConstraintLayoutImpl_

#define RESTRICT_BaseHasWidgets 1
#define INCLUDE_ASBaseHasWidgets 1
#include "BaseHasWidgets.h"

@class ASWidgetAttribute;
@class IOSClass;
@class JavaLangBoolean;
@class JavaLangInteger;
@class NSString;
@protocol ASIFragment;
@protocol ASILifeCycleDecorator;
@protocol ASIWidget;
@protocol JavaUtilMap;

@interface ASConstraintLayoutImpl : ASBaseHasWidgets
@property id uiView;

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)localname;

- (instancetype)initWithNSString:(NSString *)groupName
                    withNSString:(NSString *)localname;

- (void)addWithASIWidget:(id<ASIWidget>)w
                 withInt:(int32_t)index;

- (id)asNativeWidget;

- (id)asWidget;

- (bool)checkIosVersionWithNSString:(NSString *)v;

- (void)createWithASIFragment:(id<ASIFragment>)fragment
              withJavaUtilMap:(id<JavaUtilMap>)params;

- (id)getAttributeWithASWidgetAttribute:(ASWidgetAttribute *)key
              withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator;

- (id)getChildAttributeWithASIWidget:(id<ASIWidget>)w
               withASWidgetAttribute:(ASWidgetAttribute *)key;

- (IOSClass *)getViewClass;

- (void)invalidate;

- (void)loadAttributesWithNSString:(NSString *)localName;

- (void)nativeCreateWithJavaUtilMap:(id<JavaUtilMap>)params;

- (id<ASIWidget>)newInstance OBJC_METHOD_FAMILY_NONE;

- (bool)removeWithInt:(int32_t)index;

- (bool)removeWithASIWidget:(id<ASIWidget>)w;

- (void)requestLayout;

- (void)setAttributeWithASWidgetAttribute:(ASWidgetAttribute *)key
                             withNSString:(NSString *)strValue
                                   withId:(id)objValue
                withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator;

- (void)setChildAttributeWithASIWidget:(id<ASIWidget>)w
                 withASWidgetAttribute:(ASWidgetAttribute *)key
                          withNSString:(NSString *)strValue
                                withId:(id)objValue;

- (void)setIdWithNSString:(NSString *)id_;

- (void)setVisibleWithBoolean:(bool)b;

@end

J2OBJC_STATIC_INIT(ASConstraintLayoutImpl)

inline NSString *ASConstraintLayoutImpl_get_LOCAL_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ASConstraintLayoutImpl_LOCAL_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ASConstraintLayoutImpl, LOCAL_NAME, NSString *)

inline NSString *ASConstraintLayoutImpl_get_GROUP_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ASConstraintLayoutImpl_GROUP_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ASConstraintLayoutImpl, GROUP_NAME, NSString *)

FOUNDATION_EXPORT void ASConstraintLayoutImpl_init(ASConstraintLayoutImpl *self);

FOUNDATION_EXPORT ASConstraintLayoutImpl *new_ASConstraintLayoutImpl_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASConstraintLayoutImpl *create_ASConstraintLayoutImpl_init(void);

FOUNDATION_EXPORT void ASConstraintLayoutImpl_initWithNSString_(ASConstraintLayoutImpl *self, NSString *localname);

FOUNDATION_EXPORT ASConstraintLayoutImpl *new_ASConstraintLayoutImpl_initWithNSString_(NSString *localname) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASConstraintLayoutImpl *create_ASConstraintLayoutImpl_initWithNSString_(NSString *localname);

FOUNDATION_EXPORT void ASConstraintLayoutImpl_initWithNSString_withNSString_(ASConstraintLayoutImpl *self, NSString *groupName, NSString *localname);

FOUNDATION_EXPORT ASConstraintLayoutImpl *new_ASConstraintLayoutImpl_initWithNSString_withNSString_(NSString *groupName, NSString *localname) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASConstraintLayoutImpl *create_ASConstraintLayoutImpl_initWithNSString_withNSString_(NSString *groupName, NSString *localname);

J2OBJC_TYPE_LITERAL_HEADER(ASConstraintLayoutImpl)

@compatibility_alias ComAsheraConstraintlayoutConstraintLayoutImpl ASConstraintLayoutImpl;


#endif

#if !defined (ASConstraintLayoutImpl_DallocHandler_) && (INCLUDE_ALL_ConstraintLayoutImpl || defined(INCLUDE_ASConstraintLayoutImpl_DallocHandler))
#define ASConstraintLayoutImpl_DallocHandler_

#define RESTRICT_EventBusHandler 1
#define INCLUDE_ASEventBusHandler 1
#include "EventBusHandler.h"

@class ASConstraintLayoutImpl;
@class NSString;

@interface ASConstraintLayoutImpl_DallocHandler : ASEventBusHandler

#pragma mark Public

- (instancetype)initWithASConstraintLayoutImpl:(ASConstraintLayoutImpl *)outer$
                                  withNSString:(NSString *)type;

#pragma mark Protected

- (void)doPerformWithId:(id)payload;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASConstraintLayoutImpl_DallocHandler)

FOUNDATION_EXPORT void ASConstraintLayoutImpl_DallocHandler_initWithASConstraintLayoutImpl_withNSString_(ASConstraintLayoutImpl_DallocHandler *self, ASConstraintLayoutImpl *outer$, NSString *type);

FOUNDATION_EXPORT ASConstraintLayoutImpl_DallocHandler *new_ASConstraintLayoutImpl_DallocHandler_initWithASConstraintLayoutImpl_withNSString_(ASConstraintLayoutImpl *outer$, NSString *type) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASConstraintLayoutImpl_DallocHandler *create_ASConstraintLayoutImpl_DallocHandler_initWithASConstraintLayoutImpl_withNSString_(ASConstraintLayoutImpl *outer$, NSString *type);

J2OBJC_TYPE_LITERAL_HEADER(ASConstraintLayoutImpl_DallocHandler)


#endif

#if !defined (ASConstraintLayoutImpl_OptimizationLevel_) && (INCLUDE_ALL_ConstraintLayoutImpl || defined(INCLUDE_ASConstraintLayoutImpl_OptimizationLevel))
#define ASConstraintLayoutImpl_OptimizationLevel_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASConstraintLayoutImpl_OptimizationLevel : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASConstraintLayoutImpl_OptimizationLevel)

FOUNDATION_EXPORT void ASConstraintLayoutImpl_OptimizationLevel_init(ASConstraintLayoutImpl_OptimizationLevel *self);

FOUNDATION_EXPORT ASConstraintLayoutImpl_OptimizationLevel *new_ASConstraintLayoutImpl_OptimizationLevel_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASConstraintLayoutImpl_OptimizationLevel *create_ASConstraintLayoutImpl_OptimizationLevel_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASConstraintLayoutImpl_OptimizationLevel)


#endif

#if !defined (ASConstraintLayoutImpl_Orientation_) && (INCLUDE_ALL_ConstraintLayoutImpl || defined(INCLUDE_ASConstraintLayoutImpl_Orientation))
#define ASConstraintLayoutImpl_Orientation_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASConstraintLayoutImpl_Orientation : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASConstraintLayoutImpl_Orientation)

FOUNDATION_EXPORT void ASConstraintLayoutImpl_Orientation_init(ASConstraintLayoutImpl_Orientation *self);

FOUNDATION_EXPORT ASConstraintLayoutImpl_Orientation *new_ASConstraintLayoutImpl_Orientation_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASConstraintLayoutImpl_Orientation *create_ASConstraintLayoutImpl_Orientation_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASConstraintLayoutImpl_Orientation)


#endif

#if !defined (ASConstraintLayoutImpl_Layout_constraintWidth_) && (INCLUDE_ALL_ConstraintLayoutImpl || defined(INCLUDE_ASConstraintLayoutImpl_Layout_constraintWidth))
#define ASConstraintLayoutImpl_Layout_constraintWidth_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASConstraintLayoutImpl_Layout_constraintWidth : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASConstraintLayoutImpl_Layout_constraintWidth)

FOUNDATION_EXPORT void ASConstraintLayoutImpl_Layout_constraintWidth_init(ASConstraintLayoutImpl_Layout_constraintWidth *self);

FOUNDATION_EXPORT ASConstraintLayoutImpl_Layout_constraintWidth *new_ASConstraintLayoutImpl_Layout_constraintWidth_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASConstraintLayoutImpl_Layout_constraintWidth *create_ASConstraintLayoutImpl_Layout_constraintWidth_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASConstraintLayoutImpl_Layout_constraintWidth)


#endif

#if !defined (ASConstraintLayoutImpl_Layout_constraintHeight_) && (INCLUDE_ALL_ConstraintLayoutImpl || defined(INCLUDE_ASConstraintLayoutImpl_Layout_constraintHeight))
#define ASConstraintLayoutImpl_Layout_constraintHeight_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASConstraintLayoutImpl_Layout_constraintHeight : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASConstraintLayoutImpl_Layout_constraintHeight)

FOUNDATION_EXPORT void ASConstraintLayoutImpl_Layout_constraintHeight_init(ASConstraintLayoutImpl_Layout_constraintHeight *self);

FOUNDATION_EXPORT ASConstraintLayoutImpl_Layout_constraintHeight *new_ASConstraintLayoutImpl_Layout_constraintHeight_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASConstraintLayoutImpl_Layout_constraintHeight *create_ASConstraintLayoutImpl_Layout_constraintHeight_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASConstraintLayoutImpl_Layout_constraintHeight)


#endif

#if !defined (ASConstraintLayoutImpl_Layout_constraintWidth_default_) && (INCLUDE_ALL_ConstraintLayoutImpl || defined(INCLUDE_ASConstraintLayoutImpl_Layout_constraintWidth_default))
#define ASConstraintLayoutImpl_Layout_constraintWidth_default_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASConstraintLayoutImpl_Layout_constraintWidth_default : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASConstraintLayoutImpl_Layout_constraintWidth_default)

FOUNDATION_EXPORT void ASConstraintLayoutImpl_Layout_constraintWidth_default_init(ASConstraintLayoutImpl_Layout_constraintWidth_default *self);

FOUNDATION_EXPORT ASConstraintLayoutImpl_Layout_constraintWidth_default *new_ASConstraintLayoutImpl_Layout_constraintWidth_default_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASConstraintLayoutImpl_Layout_constraintWidth_default *create_ASConstraintLayoutImpl_Layout_constraintWidth_default_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASConstraintLayoutImpl_Layout_constraintWidth_default)


#endif

#if !defined (ASConstraintLayoutImpl_Layout_constraintHeight_default_) && (INCLUDE_ALL_ConstraintLayoutImpl || defined(INCLUDE_ASConstraintLayoutImpl_Layout_constraintHeight_default))
#define ASConstraintLayoutImpl_Layout_constraintHeight_default_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASConstraintLayoutImpl_Layout_constraintHeight_default : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASConstraintLayoutImpl_Layout_constraintHeight_default)

FOUNDATION_EXPORT void ASConstraintLayoutImpl_Layout_constraintHeight_default_init(ASConstraintLayoutImpl_Layout_constraintHeight_default *self);

FOUNDATION_EXPORT ASConstraintLayoutImpl_Layout_constraintHeight_default *new_ASConstraintLayoutImpl_Layout_constraintHeight_default_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASConstraintLayoutImpl_Layout_constraintHeight_default *create_ASConstraintLayoutImpl_Layout_constraintHeight_default_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASConstraintLayoutImpl_Layout_constraintHeight_default)


#endif

#if !defined (ASConstraintLayoutImpl_Layout_constraintHorizontal_chainStyle_) && (INCLUDE_ALL_ConstraintLayoutImpl || defined(INCLUDE_ASConstraintLayoutImpl_Layout_constraintHorizontal_chainStyle))
#define ASConstraintLayoutImpl_Layout_constraintHorizontal_chainStyle_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASConstraintLayoutImpl_Layout_constraintHorizontal_chainStyle : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASConstraintLayoutImpl_Layout_constraintHorizontal_chainStyle)

FOUNDATION_EXPORT void ASConstraintLayoutImpl_Layout_constraintHorizontal_chainStyle_init(ASConstraintLayoutImpl_Layout_constraintHorizontal_chainStyle *self);

FOUNDATION_EXPORT ASConstraintLayoutImpl_Layout_constraintHorizontal_chainStyle *new_ASConstraintLayoutImpl_Layout_constraintHorizontal_chainStyle_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASConstraintLayoutImpl_Layout_constraintHorizontal_chainStyle *create_ASConstraintLayoutImpl_Layout_constraintHorizontal_chainStyle_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASConstraintLayoutImpl_Layout_constraintHorizontal_chainStyle)


#endif

#if !defined (ASConstraintLayoutImpl_Layout_constraintVertical_chainStyle_) && (INCLUDE_ALL_ConstraintLayoutImpl || defined(INCLUDE_ASConstraintLayoutImpl_Layout_constraintVertical_chainStyle))
#define ASConstraintLayoutImpl_Layout_constraintVertical_chainStyle_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASConstraintLayoutImpl_Layout_constraintVertical_chainStyle : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASConstraintLayoutImpl_Layout_constraintVertical_chainStyle)

FOUNDATION_EXPORT void ASConstraintLayoutImpl_Layout_constraintVertical_chainStyle_init(ASConstraintLayoutImpl_Layout_constraintVertical_chainStyle *self);

FOUNDATION_EXPORT ASConstraintLayoutImpl_Layout_constraintVertical_chainStyle *new_ASConstraintLayoutImpl_Layout_constraintVertical_chainStyle_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASConstraintLayoutImpl_Layout_constraintVertical_chainStyle *create_ASConstraintLayoutImpl_Layout_constraintVertical_chainStyle_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASConstraintLayoutImpl_Layout_constraintVertical_chainStyle)


#endif

#if !defined (ASConstraintLayoutImpl_Layout_wrapBehaviorInParent_) && (INCLUDE_ALL_ConstraintLayoutImpl || defined(INCLUDE_ASConstraintLayoutImpl_Layout_wrapBehaviorInParent))
#define ASConstraintLayoutImpl_Layout_wrapBehaviorInParent_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASConstraintLayoutImpl_Layout_wrapBehaviorInParent : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASConstraintLayoutImpl_Layout_wrapBehaviorInParent)

FOUNDATION_EXPORT void ASConstraintLayoutImpl_Layout_wrapBehaviorInParent_init(ASConstraintLayoutImpl_Layout_wrapBehaviorInParent *self);

FOUNDATION_EXPORT ASConstraintLayoutImpl_Layout_wrapBehaviorInParent *new_ASConstraintLayoutImpl_Layout_wrapBehaviorInParent_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASConstraintLayoutImpl_Layout_wrapBehaviorInParent *create_ASConstraintLayoutImpl_Layout_wrapBehaviorInParent_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASConstraintLayoutImpl_Layout_wrapBehaviorInParent)


#endif

#if !defined (ASConstraintLayoutImpl_ConstraintLayoutExt_) && (INCLUDE_ALL_ConstraintLayoutImpl || defined(INCLUDE_ASConstraintLayoutImpl_ConstraintLayoutExt))
#define ASConstraintLayoutImpl_ConstraintLayoutExt_

#define RESTRICT_ConstraintLayout 1
#define INCLUDE_ADXConstraintLayout 1
#include "ConstraintLayout.h"

#define RESTRICT_ILifeCycleDecorator 1
#define INCLUDE_ASILifeCycleDecorator 1
#include "ILifeCycleDecorator.h"

@class ADRect;
@class ADView;
@class ASConstraintLayoutImpl;
@class ASWidgetAttribute;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaLangBoolean;
@class JavaLangInteger;
@class NSString;
@protocol ASIWidget;
@protocol JavaUtilList;

@interface ASConstraintLayoutImpl_ConstraintLayoutExt : ADXConstraintLayout < ASILifeCycleDecorator >

#pragma mark Public

- (instancetype)initWithASConstraintLayoutImpl:(ASConstraintLayoutImpl *)outer$;

- (void)drawableStateChanged;

- (void)endViewTransitionWithADView:(ADView *)view;

- (void)executeWithNSString:(NSString *)method
          withNSObjectArray:(IOSObjectArray *)canvas;

- (id)getAttributeWithASWidgetAttribute:(ASWidgetAttribute *)widgetAttribute;

- (void)getLocationOnScreenWithIntArray:(IOSIntArray *)appScreenLocation;

- (id<JavaUtilList>)getMethods;

- (id<ASIWidget>)getWidget;

- (void)getWindowVisibleDisplayFrameWithADRect:(ADRect *)displayFrame;

- (ADView *)inflateViewWithNSString:(NSString *)layout;

- (void)initialized OBJC_METHOD_FAMILY_NONE;

- (id<ASILifeCycleDecorator>)newInstanceWithASIWidget:(id<ASIWidget>)widget OBJC_METHOD_FAMILY_NONE;

- (void)offsetLeftAndRightWithInt:(int32_t)offset;

- (void)offsetTopAndBottomWithInt:(int32_t)offset;

- (void)onMeasureWithInt:(int32_t)widthMeasureSpec
                 withInt:(int32_t)heightMeasureSpec;

- (void)remeasure;

- (void)removeFromParent;

- (void)setAttributeWithASWidgetAttribute:(ASWidgetAttribute *)widgetAttribute
                             withNSString:(NSString *)strValue
                                   withId:(id)objValue;

- (void)setMyAttributeWithNSString:(NSString *)name
                            withId:(id)value;

- (void)setState0WithId:(id)value;

- (void)setState1WithId:(id)value;

- (void)setState2WithId:(id)value;

- (void)setState3WithId:(id)value;

- (void)setState4WithId:(id)value;

- (void)setVisibilityWithInt:(int32_t)visibility;

- (void)state0;

- (void)state1;

- (void)state2;

- (void)state3;

- (void)state4;

- (void)stateNo;

- (void)stateYes;

- (void)updateMeasuredDimensionWithInt:(int32_t)width
                               withInt:(int32_t)height;

#pragma mark Protected

- (void)onLayoutWithBoolean:(bool)changed
                    withInt:(int32_t)l
                    withInt:(int32_t)t
                    withInt:(int32_t)r
                    withInt:(int32_t)b;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASConstraintLayoutImpl_ConstraintLayoutExt)

FOUNDATION_EXPORT void ASConstraintLayoutImpl_ConstraintLayoutExt_initWithASConstraintLayoutImpl_(ASConstraintLayoutImpl_ConstraintLayoutExt *self, ASConstraintLayoutImpl *outer$);

FOUNDATION_EXPORT ASConstraintLayoutImpl_ConstraintLayoutExt *new_ASConstraintLayoutImpl_ConstraintLayoutExt_initWithASConstraintLayoutImpl_(ASConstraintLayoutImpl *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASConstraintLayoutImpl_ConstraintLayoutExt *create_ASConstraintLayoutImpl_ConstraintLayoutExt_initWithASConstraintLayoutImpl_(ASConstraintLayoutImpl *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ASConstraintLayoutImpl_ConstraintLayoutExt)


#endif

#pragma pop_macro("INCLUDE_ALL_ConstraintLayoutImpl")
